<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="reader_8h" kind="file" language="C++">
    <compoundname>reader.h</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">list</includes>
    <includes local="no">memory</includes>
    <includes local="no">mutex</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes local="yes">cyber/blocker/blocker.h</includes>
    <includes local="yes">cyber/common/global_data.h</includes>
    <includes local="yes">cyber/croutine/routine_factory.h</includes>
    <includes local="yes">cyber/data/data_visitor.h</includes>
    <includes refid="reader__base_8h" local="yes">cyber/node/reader_base.h</includes>
    <includes local="yes">cyber/proto/topology_change.pb.h</includes>
    <includes local="yes">cyber/scheduler/scheduler_factory.h</includes>
    <includes refid="topology__manager_8h" local="yes">cyber/service_discovery/topology_manager.h</includes>
    <includes refid="time_8h" local="yes">cyber/time/time.h</includes>
    <includes local="yes">cyber/transport/transport.h</includes>
    <includedby refid="node__channel__impl_8h" local="yes">/home/dexin/code/Edith/cyber/node/node_channel_impl.h</includedby>
    <incdepgraph>
      <node id="655">
        <label>list</label>
      </node>
      <node id="688">
        <label>cyber/service_discovery/container/warehouse_base.h</label>
        <link refid="warehouse__base_8h_source"/>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
      </node>
      <node id="686">
        <label>cyber/base/atomic_rw_lock.h</label>
      </node>
      <node id="680">
        <label>fastrtps/participant/Participant.h</label>
      </node>
      <node id="667">
        <label>atomic</label>
      </node>
      <node id="664">
        <label>cyber/croutine/routine_factory.h</label>
      </node>
      <node id="693">
        <label>fastrtps/attributes/PublisherAttributes.h</label>
      </node>
      <node id="677">
        <label>cyber/base/signal.h</label>
      </node>
      <node id="675">
        <label>functional</label>
      </node>
      <node id="704">
        <label>limits</label>
      </node>
      <node id="697">
        <label>cyber/service_discovery/communication/subscriber_listener.h</label>
        <link refid="subscriber__listener_8h_source"/>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="657" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="698" relation="include">
        </childnode>
        <childnode refid="696" relation="include">
        </childnode>
        <childnode refid="699" relation="include">
        </childnode>
      </node>
      <node id="705">
        <label>cyber/time/duration.h</label>
        <link refid="duration_8h_source"/>
        <childnode refid="706" relation="include">
        </childnode>
        <childnode refid="707" relation="include">
        </childnode>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="708" relation="include">
        </childnode>
        <childnode refid="709" relation="include">
        </childnode>
      </node>
      <node id="690">
        <label>cyber/proto/role_attributes.pb.h</label>
      </node>
      <node id="694">
        <label>fastrtps/attributes/SubscriberAttributes.h</label>
      </node>
      <node id="698">
        <label>fastrtps/subscriber/SampleInfo.h</label>
      </node>
      <node id="685">
        <label>cstdint</label>
      </node>
      <node id="689">
        <label>cyber/service_discovery/role/role.h</label>
        <link refid="role_8h_source"/>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="656" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="690" relation="include">
        </childnode>
      </node>
      <node id="702">
        <label>cyber/transport/rtps/participant.h</label>
      </node>
      <node id="665">
        <label>cyber/data/data_visitor.h</label>
      </node>
      <node id="707">
        <label>cmath</label>
      </node>
      <node id="709">
        <label>stdexcept</label>
      </node>
      <node id="695">
        <label>fastrtps/publisher/Publisher.h</label>
      </node>
      <node id="663">
        <label>cyber/common/global_data.h</label>
      </node>
      <node id="658">
        <label>string</label>
      </node>
      <node id="666">
        <label>cyber/node/reader_base.h</label>
        <link refid="reader__base_8h_source"/>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="656" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="670" relation="include">
        </childnode>
        <childnode refid="671" relation="include">
        </childnode>
      </node>
      <node id="676">
        <label>map</label>
      </node>
      <node id="669">
        <label>cyber/common/util.h</label>
      </node>
      <node id="683">
        <label>unordered_set</label>
      </node>
      <node id="703">
        <label>cyber/time/time.h</label>
        <link refid="time_8h_source"/>
        <childnode refid="704" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="705" relation="include">
        </childnode>
      </node>
      <node id="672">
        <label>cyber/proto/topology_change.pb.h</label>
      </node>
      <node id="687">
        <label>cyber/service_discovery/container/multi_value_warehouse.h</label>
        <link refid="multi__value__warehouse_8h_source"/>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
        <childnode refid="688" relation="include">
        </childnode>
      </node>
      <node id="682">
        <label>cyber/service_discovery/specific_manager/channel_manager.h</label>
        <link refid="channel__manager_8h_source"/>
        <childnode refid="656" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
        <childnode refid="684" relation="include">
        </childnode>
        <childnode refid="687" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
        <childnode refid="692" relation="include">
        </childnode>
      </node>
      <node id="700">
        <label>cyber/service_discovery/specific_manager/node_manager.h</label>
        <link refid="node__manager_8h_source"/>
        <childnode refid="656" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
        <childnode refid="692" relation="include">
        </childnode>
      </node>
      <node id="674">
        <label>cyber/service_discovery/topology_manager.h</label>
        <link refid="topology__manager_8h_source"/>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="656" relation="include">
        </childnode>
        <childnode refid="657" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="700" relation="include">
        </childnode>
        <childnode refid="701" relation="include">
        </childnode>
        <childnode refid="702" relation="include">
        </childnode>
      </node>
      <node id="684">
        <label>cyber/service_discovery/container/graph.h</label>
        <link refid="graph_8h_source"/>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
      </node>
      <node id="691">
        <label>cyber/service_discovery/container/single_value_warehouse.h</label>
        <link refid="single__value__warehouse_8h_source"/>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
        <childnode refid="688" relation="include">
        </childnode>
      </node>
      <node id="681">
        <label>fastrtps/participant/ParticipantListener.h</label>
      </node>
      <node id="692">
        <label>cyber/service_discovery/specific_manager/manager.h</label>
        <link refid="manager_8h_source"/>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="657" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="693" relation="include">
        </childnode>
        <childnode refid="694" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="695" relation="include">
        </childnode>
        <childnode refid="696" relation="include">
        </childnode>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="697" relation="include">
        </childnode>
      </node>
      <node id="670">
        <label>cyber/event/perf_event_cache.h</label>
      </node>
      <node id="661">
        <label>vector</label>
      </node>
      <node id="660">
        <label>utility</label>
      </node>
      <node id="673">
        <label>cyber/scheduler/scheduler_factory.h</label>
      </node>
      <node id="678">
        <label>cyber/service_discovery/communication/participant_listener.h</label>
        <link refid="participant__listener_8h_source"/>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="657" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="681" relation="include">
        </childnode>
      </node>
      <node id="679">
        <label>fastrtps/Domain.h</label>
      </node>
      <node id="696">
        <label>fastrtps/subscriber/Subscriber.h</label>
      </node>
      <node id="699">
        <label>fastrtps/subscriber/SubscriberListener.h</label>
      </node>
      <node id="708">
        <label>iostream</label>
      </node>
      <node id="668">
        <label>cyber/common/macros.h</label>
      </node>
      <node id="659">
        <label>unordered_map</label>
      </node>
      <node id="706">
        <label>climits</label>
      </node>
      <node id="657">
        <label>mutex</label>
      </node>
      <node id="662">
        <label>cyber/blocker/blocker.h</label>
      </node>
      <node id="671">
        <label>cyber/transport/transport.h</label>
      </node>
      <node id="654">
        <label>algorithm</label>
      </node>
      <node id="653">
        <label>/home/dexin/code/Edith/cyber/node/reader.h</label>
        <link refid="reader.h"/>
        <childnode refid="654" relation="include">
        </childnode>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="656" relation="include">
        </childnode>
        <childnode refid="657" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="660" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
        <childnode refid="662" relation="include">
        </childnode>
        <childnode refid="663" relation="include">
        </childnode>
        <childnode refid="664" relation="include">
        </childnode>
        <childnode refid="665" relation="include">
        </childnode>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="673" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="703" relation="include">
        </childnode>
        <childnode refid="671" relation="include">
        </childnode>
      </node>
      <node id="701">
        <label>cyber/service_discovery/specific_manager/service_manager.h</label>
        <link refid="service__manager_8h_source"/>
        <childnode refid="656" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
        <childnode refid="687" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
        <childnode refid="692" relation="include">
        </childnode>
      </node>
      <node id="656">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="718">
        <label>/home/dexin/code/Edith/cyber/node/node_service_impl.h</label>
        <link refid="node__service__impl_8h_source"/>
        <childnode refid="712" relation="include">
        </childnode>
      </node>
      <node id="712">
        <label>/home/dexin/code/Edith/cyber/node/node.h</label>
        <link refid="node_8h_source"/>
        <childnode refid="713" relation="include">
        </childnode>
        <childnode refid="714" relation="include">
        </childnode>
      </node>
      <node id="713">
        <label>/home/dexin/code/Edith/cyber/cyber.h</label>
        <link refid="cyber_8h_source"/>
      </node>
      <node id="717">
        <label>/home/dexin/code/Edith/cyber/service/client.h</label>
        <link refid="client_8h_source"/>
        <childnode refid="718" relation="include">
        </childnode>
        <childnode refid="719" relation="include">
        </childnode>
      </node>
      <node id="714">
        <label>/home/dexin/code/Edith/cyber/component/component_base.h</label>
        <link refid="component__base_8h_source"/>
        <childnode refid="715" relation="include">
        </childnode>
        <childnode refid="716" relation="include">
        </childnode>
      </node>
      <node id="711">
        <label>/home/dexin/code/Edith/cyber/node/node_channel_impl.h</label>
        <link refid="node__channel__impl_8h_source"/>
        <childnode refid="712" relation="include">
        </childnode>
        <childnode refid="717" relation="include">
        </childnode>
        <childnode refid="720" relation="include">
        </childnode>
      </node>
      <node id="721">
        <label>/home/dexin/code/Edith/cyber/parameter/parameter_server.h</label>
        <link refid="parameter__server_8h_source"/>
      </node>
      <node id="716">
        <label>/home/dexin/code/Edith/cyber/component/timer_component.h</label>
        <link refid="timer__component_8h_source"/>
      </node>
      <node id="719">
        <label>/home/dexin/code/Edith/cyber/parameter/parameter_client.h</label>
        <link refid="parameter__client_8h_source"/>
      </node>
      <node id="720">
        <label>/home/dexin/code/Edith/cyber/service/service.h</label>
        <link refid="service_8h_source"/>
        <childnode refid="718" relation="include">
        </childnode>
        <childnode refid="721" relation="include">
        </childnode>
      </node>
      <node id="715">
        <label>/home/dexin/code/Edith/cyber/component/component.h</label>
        <link refid="component_8h_source"/>
        <childnode refid="713" relation="include">
        </childnode>
      </node>
      <node id="710">
        <label>/home/dexin/code/Edith/cyber/node/reader.h</label>
        <link refid="reader.h"/>
        <childnode refid="711" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classapollo_1_1cyber_1_1_reader" prot="public">apollo::cyber::Reader</innerclass>
    <innernamespace refid="namespaceapollo">apollo</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber">apollo::cyber</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2018<sp/>The<sp/>Apollo<sp/>Authors.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYBER_NODE_READER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CYBER_NODE_READER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/blocker/blocker.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/common/global_data.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/croutine/routine_factory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/data/data_visitor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/node/reader_base.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/proto/topology_change.pb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/scheduler/scheduler_factory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/service_discovery/topology_manager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/time/time.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/transport/transport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceapollo" kindref="compound">apollo</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecyber" kindref="compound">cyber</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M0&gt;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CallbackFunc<sp/>=<sp/>std::function&lt;void(const<sp/>std::shared_ptr&lt;M0&gt;&amp;)&gt;;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>proto::RoleType;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>DEFAULT_PENDING_QUEUE_SIZE<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="67" refid="classapollo_1_1cyber_1_1_reader" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1_reader" kindref="compound">Reader</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_base" kindref="compound">ReaderBase</ref><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>BlockerPtr<sp/>=<sp/>std::unique_ptr&lt;blocker::Blocker&lt;MessageT&gt;&gt;;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReceiverPtr<sp/>=<sp/>std::shared_ptr&lt;transport::Receiver&lt;MessageT&gt;&gt;;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ChangeConnection<sp/>=</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>service_discovery::Manager::ChangeConnection;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Iterator<sp/>=</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::list&lt;std::shared_ptr&lt;MessageT&gt;&gt;::const_iterator;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a69f4d76924d5313aa62254b479f74741" kindref="member">Reader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>proto::RoleAttributes&amp;<sp/>role_attr,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CallbackFunc&lt;MessageT&gt;&amp;<sp/>reader_func<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>pending_queue_size<sp/>=<sp/>DEFAULT_PENDING_QUEUE_SIZE);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classapollo_1_1cyber_1_1_reader" kindref="compound">Reader</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a249fd8fc318b8f86d018d2016b926ca4" kindref="member">Init</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1accc21ea8144e9c577be55ca03e152769" kindref="member">Shutdown</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a00b3cdc0a487ed6fe0f68e703166d391" kindref="member">Observe</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1ab286c2d587e10eadb339bcf55f4a9567" kindref="member">ClearData</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1aca67f3936aa209c1a73f1ca984062f3a" kindref="member">HasReceived</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1ab3e96bf171f2d1fbbafa40da14590548" kindref="member">Empty</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a51cdaa33430e6c1b2905336066a4b6f2" kindref="member">GetDelaySec</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a9f787ae54e884141d13396345b56c9e2" kindref="member">PendingQueueSize</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a9acce2d137849540e434596de51b10bf" kindref="member">Enqueue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;MessageT&gt;&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a20a9b73c463c8f65b9592bb295745fa6" kindref="member">SetHistoryDepth</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t&amp;<sp/>depth);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a6e1d8dd73f052175e1599286f54ba80c" kindref="member">GetHistoryDepth</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;MessageT&gt;<sp/><ref refid="classapollo_1_1cyber_1_1_reader_1ac3fabcbcb3eac7570fc719f07cdaac27" kindref="member">GetLatestObserved</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;MessageT&gt;<sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a787bb122252d2e2a86fdb04a81d6beca" kindref="member">GetOldestObserved</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classapollo_1_1cyber_1_1_reader_1a5fff77810d6a55099b507eb9e4a6135c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Iterator<sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a5fff77810d6a55099b507eb9e4a6135c" kindref="member">Begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blocker_-&gt;ObservedBegin();<sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="classapollo_1_1cyber_1_1_reader_1a1e670b90e2896b668b8061860d6e953f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Iterator<sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a1e670b90e2896b668b8061860d6e953f" kindref="member">End</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blocker_-&gt;ObservedEnd();<sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a9fc3587c84ebe1e483b12c2c91314786" kindref="member">HasWriter</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a5d2fe028b8ba545a07621d8412a6df95" kindref="member">GetWriters</ref>(std::vector&lt;proto::RoleAttributes&gt;*<sp/>writers)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>latest_recv_time_sec_<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>second_to_lastest_recv_time_sec_<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>uint32_t<sp/>pending_queue_size_;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JoinTheTopology();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LeaveTheTopology();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnChannelChange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>proto::ChangeMsg&amp;<sp/>change_msg);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>CallbackFunc&lt;MessageT&gt;<sp/>reader_func_;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>ReceiverPtr<sp/>receiver_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>std::string<sp/>croutine_name_;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>BlockerPtr<sp/>blocker_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>ChangeConnection<sp/>change_conn_;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>service_discovery::ChannelManagerPtr<sp/>channel_manager_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="229" refid="classapollo_1_1cyber_1_1_reader_1a69f4d76924d5313aa62254b479f74741" refkind="member"><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1_reader_1a69f4d76924d5313aa62254b479f74741" kindref="member">Reader&lt;MessageT&gt;::Reader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>proto::RoleAttributes&amp;<sp/>role_attr,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CallbackFunc&lt;MessageT&gt;&amp;<sp/>reader_func,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>pending_queue_size)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classapollo_1_1cyber_1_1_reader_base" kindref="compound">ReaderBase</ref>(role_attr),</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pending_queue_size_(pending_queue_size),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_func_(reader_func)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>blocker_.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>blocker::Blocker&lt;MessageT&gt;(blocker::BlockerAttr(</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>role_attr.qos_profile().depth(),<sp/>role_attr.channel_name())));</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1_reader" kindref="compound">Reader&lt;MessageT&gt;::~Reader</ref>()<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1accc21ea8144e9c577be55ca03e152769" kindref="member">Shutdown</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="245" refid="classapollo_1_1cyber_1_1_reader_1a9acce2d137849540e434596de51b10bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a9acce2d137849540e434596de51b10bf" kindref="member">Reader&lt;MessageT&gt;::Enqueue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;MessageT&gt;&amp;<sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>second_to_lastest_recv_time_sec_<sp/>=<sp/>latest_recv_time_sec_;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>latest_recv_time_sec_<sp/>=<sp/><ref refid="classapollo_1_1cyber_1_1_time_1ae99205967a9827bf059bc0e6e32dedd4" kindref="member">Time::Now</ref>().<ref refid="classapollo_1_1cyber_1_1_time_1ac2d42598d234b028c8a614ddb57bb858" kindref="member">ToSecond</ref>();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>blocker_-&gt;Publish(msg);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="252" refid="classapollo_1_1cyber_1_1_reader_1a00b3cdc0a487ed6fe0f68e703166d391" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a00b3cdc0a487ed6fe0f68e703166d391" kindref="member">Reader&lt;MessageT&gt;::Observe</ref>()<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>blocker_-&gt;Observe();</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="257" refid="classapollo_1_1cyber_1_1_reader_1a249fd8fc318b8f86d018d2016b926ca4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a249fd8fc318b8f86d018d2016b926ca4" kindref="member">Reader&lt;MessageT&gt;::Init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(init_.exchange(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>std::function&lt;void(const<sp/>std::shared_ptr&lt;MessageT&gt;&amp;)&gt;<sp/>func;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader_func_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>func<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;MessageT&gt;&amp;<sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classapollo_1_1cyber_1_1_reader_1a9acce2d137849540e434596de51b10bf" kindref="member">Enqueue</ref>(msg);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;reader_func_(msg);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>func<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;MessageT&gt;&amp;<sp/>msg)<sp/>{<sp/>this-&gt;<ref refid="classapollo_1_1cyber_1_1_reader_1a9acce2d137849540e434596de51b10bf" kindref="member">Enqueue</ref>(msg);<sp/>};</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sched<sp/>=<sp/>scheduler::Instance();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>croutine_name_<sp/>=<sp/>role_attr_.node_name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>role_attr_.channel_name();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dv<sp/>=<sp/>std::make_shared&lt;data::DataVisitor&lt;MessageT&gt;&gt;(</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>role_attr_.channel_id(),<sp/>pending_queue_size_);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Using<sp/>factory<sp/>to<sp/>wrap<sp/>templates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>croutine::RoutineFactory<sp/>factory<sp/>=</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>croutine::CreateRoutineFactory&lt;MessageT&gt;(std::move(func),<sp/>dv);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sched-&gt;CreateTask(factory,<sp/>croutine_name_))<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>AERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Create<sp/>Task<sp/>Failed!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>init_.store(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>receiver_<sp/>=<sp/><ref refid="classapollo_1_1cyber_1_1_receiver_manager" kindref="compound">ReceiverManager&lt;MessageT&gt;::Instance</ref>()-&gt;<ref refid="classapollo_1_1cyber_1_1_receiver_manager_1a06ac2c615eb75c3cbeb58e9af5d3730b" kindref="member">GetReceiver</ref>(role_attr_);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>this-&gt;role_attr_.set_id(receiver_-&gt;id().HashValue());</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>channel_manager_<sp/>=</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>service_discovery::TopologyManager::Instance()-&gt;channel_manager();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>JoinTheTopology();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="293" refid="classapollo_1_1cyber_1_1_reader_1accc21ea8144e9c577be55ca03e152769" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1accc21ea8144e9c577be55ca03e152769" kindref="member">Reader&lt;MessageT&gt;::Shutdown</ref>()<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!init_.exchange(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>LeaveTheTopology();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>receiver_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>channel_manager_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!croutine_name_.empty())<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>scheduler::Instance()-&gt;RemoveTask(croutine_name_);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader" kindref="compound">Reader&lt;MessageT&gt;::JoinTheTopology</ref>()<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>listener</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>change_conn_<sp/>=<sp/>channel_manager_-&gt;AddChangeListener(std::bind(</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classapollo_1_1cyber_1_1_reader" kindref="compound">Reader&lt;MessageT&gt;::OnChannelChange</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>std::placeholders::_1));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>peer<sp/>writers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>channel_name<sp/>=<sp/>this-&gt;role_attr_.channel_name();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>std::vector&lt;proto::RoleAttributes&gt;<sp/>writers;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>channel_manager_-&gt;GetWritersOfChannel(channel_name,<sp/>&amp;writers);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>writer<sp/>:<sp/>writers)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>receiver_-&gt;Enable(writer);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>channel_manager_-&gt;Join(this-&gt;role_attr_,<sp/>proto::RoleType::ROLE_READER,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message::HasSerializer&lt;MessageT&gt;::value);</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader" kindref="compound">Reader&lt;MessageT&gt;::LeaveTheTopology</ref>()<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>channel_manager_-&gt;RemoveChangeListener(change_conn_);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>channel_manager_-&gt;Leave(this-&gt;role_attr_,<sp/>proto::RoleType::ROLE_READER);</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader" kindref="compound">Reader&lt;MessageT&gt;::OnChannelChange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>proto::ChangeMsg&amp;<sp/>change_msg)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(change_msg.role_type()<sp/>!=<sp/>proto::RoleType::ROLE_WRITER)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>writer_attr<sp/>=<sp/>change_msg.role_attr();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer_attr.channel_name()<sp/>!=<sp/>this-&gt;role_attr_.channel_name())<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>operate_type<sp/>=<sp/>change_msg.operate_type();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operate_type<sp/>==<sp/>proto::OperateType::OPT_JOIN)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>receiver_-&gt;Enable(writer_attr);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>receiver_-&gt;Disable(writer_attr);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="349" refid="classapollo_1_1cyber_1_1_reader_1aca67f3936aa209c1a73f1ca984062f3a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1aca67f3936aa209c1a73f1ca984062f3a" kindref="member">Reader&lt;MessageT&gt;::HasReceived</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!blocker_-&gt;IsPublishedEmpty();</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="354" refid="classapollo_1_1cyber_1_1_reader_1ab3e96bf171f2d1fbbafa40da14590548" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1ab3e96bf171f2d1fbbafa40da14590548" kindref="member">Reader&lt;MessageT&gt;::Empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blocker_-&gt;IsObservedEmpty();</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="359" refid="classapollo_1_1cyber_1_1_reader_1a51cdaa33430e6c1b2905336066a4b6f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a51cdaa33430e6c1b2905336066a4b6f2" kindref="member">Reader&lt;MessageT&gt;::GetDelaySec</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(latest_recv_time_sec_<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(second_to_lastest_recv_time_sec_<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_time_1ae99205967a9827bf059bc0e6e32dedd4" kindref="member">Time::Now</ref>().<ref refid="classapollo_1_1cyber_1_1_time_1ac2d42598d234b028c8a614ddb57bb858" kindref="member">ToSecond</ref>()<sp/>-<sp/>latest_recv_time_sec_;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::max((<ref refid="classapollo_1_1cyber_1_1_time_1ae99205967a9827bf059bc0e6e32dedd4" kindref="member">Time::Now</ref>().ToSecond()<sp/>-<sp/>latest_recv_time_sec_),</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(latest_recv_time_sec_<sp/>-<sp/>second_to_lastest_recv_time_sec_));</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="371" refid="classapollo_1_1cyber_1_1_reader_1a9f787ae54e884141d13396345b56c9e2" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a9f787ae54e884141d13396345b56c9e2" kindref="member">Reader&lt;MessageT&gt;::PendingQueueSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pending_queue_size_;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="376" refid="classapollo_1_1cyber_1_1_reader_1ac3fabcbcb3eac7570fc719f07cdaac27" refkind="member"><highlight class="normal">std::shared_ptr&lt;MessageT&gt;<sp/><ref refid="classapollo_1_1cyber_1_1_reader_1ac3fabcbcb3eac7570fc719f07cdaac27" kindref="member">Reader&lt;MessageT&gt;::GetLatestObserved</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blocker_-&gt;GetLatestObservedPtr();</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="381" refid="classapollo_1_1cyber_1_1_reader_1a787bb122252d2e2a86fdb04a81d6beca" refkind="member"><highlight class="normal">std::shared_ptr&lt;MessageT&gt;<sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a787bb122252d2e2a86fdb04a81d6beca" kindref="member">Reader&lt;MessageT&gt;::GetOldestObserved</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blocker_-&gt;GetOldestObservedPtr();</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="386" refid="classapollo_1_1cyber_1_1_reader_1ab286c2d587e10eadb339bcf55f4a9567" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1ab286c2d587e10eadb339bcf55f4a9567" kindref="member">Reader&lt;MessageT&gt;::ClearData</ref>()<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>blocker_-&gt;ClearPublished();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>blocker_-&gt;ClearObserved();</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="392" refid="classapollo_1_1cyber_1_1_reader_1a20a9b73c463c8f65b9592bb295745fa6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a20a9b73c463c8f65b9592bb295745fa6" kindref="member">Reader&lt;MessageT&gt;::SetHistoryDepth</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t&amp;<sp/>depth)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>blocker_-&gt;set_capacity(depth);</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="397" refid="classapollo_1_1cyber_1_1_reader_1a6e1d8dd73f052175e1599286f54ba80c" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a6e1d8dd73f052175e1599286f54ba80c" kindref="member">Reader&lt;MessageT&gt;::GetHistoryDepth</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(blocker_-&gt;capacity());</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="402" refid="classapollo_1_1cyber_1_1_reader_1a9fc3587c84ebe1e483b12c2c91314786" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a9fc3587c84ebe1e483b12c2c91314786" kindref="member">Reader&lt;MessageT&gt;::HasWriter</ref>()<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!init_.load())<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>channel_manager_-&gt;HasWriter(role_attr_.channel_name());</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="411" refid="classapollo_1_1cyber_1_1_reader_1a5d2fe028b8ba545a07621d8412a6df95" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader_1a5d2fe028b8ba545a07621d8412a6df95" kindref="member">Reader&lt;MessageT&gt;::GetWriters</ref>(std::vector&lt;proto::RoleAttributes&gt;*<sp/>writers)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writers<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!init_.load())<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>channel_manager_-&gt;GetWritersOfChannel(role_attr_.channel_name(),<sp/>writers);</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cyber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>apollo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>CYBER_NODE_READER_H_</highlight></codeline>
    </programlisting>
    <location file="/home/dexin/code/Edith/cyber/node/reader.h"/>
  </compounddef>
</doxygen>
