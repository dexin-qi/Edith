<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="writer_8h" kind="file" language="C++">
    <compoundname>writer.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="yes">cyber/common/log.h</includes>
    <includes refid="writer__base_8h" local="yes">cyber/node/writer_base.h</includes>
    <includes local="yes">cyber/proto/topology_change.pb.h</includes>
    <includes refid="topology__manager_8h" local="yes">cyber/service_discovery/topology_manager.h</includes>
    <includes local="yes">cyber/transport/transport.h</includes>
    <includedby refid="node__channel__impl_8h" local="yes">/home/dexin/code/Edith/cyber/node/node_channel_impl.h</includedby>
    <incdepgraph>
      <node id="771">
        <label>cyber/service_discovery/container/warehouse_base.h</label>
        <link refid="warehouse__base_8h_source"/>
        <childnode refid="768" relation="include">
        </childnode>
        <childnode refid="748" relation="include">
        </childnode>
        <childnode refid="772" relation="include">
        </childnode>
      </node>
      <node id="769">
        <label>cyber/base/atomic_rw_lock.h</label>
      </node>
      <node id="762">
        <label>fastrtps/participant/Participant.h</label>
      </node>
      <node id="751">
        <label>atomic</label>
      </node>
      <node id="775">
        <label>fastrtps/attributes/PublisherAttributes.h</label>
      </node>
      <node id="758">
        <label>cyber/base/signal.h</label>
      </node>
      <node id="756">
        <label>functional</label>
      </node>
      <node id="779">
        <label>cyber/service_discovery/communication/subscriber_listener.h</label>
        <link refid="subscriber__listener_8h_source"/>
        <childnode refid="756" relation="include">
        </childnode>
        <childnode refid="752" relation="include">
        </childnode>
        <childnode refid="747" relation="include">
        </childnode>
        <childnode refid="761" relation="include">
        </childnode>
        <childnode refid="780" relation="include">
        </childnode>
        <childnode refid="778" relation="include">
        </childnode>
        <childnode refid="781" relation="include">
        </childnode>
      </node>
      <node id="753">
        <label>cyber/proto/role_attributes.pb.h</label>
      </node>
      <node id="776">
        <label>fastrtps/attributes/SubscriberAttributes.h</label>
      </node>
      <node id="780">
        <label>fastrtps/subscriber/SampleInfo.h</label>
      </node>
      <node id="768">
        <label>cstdint</label>
      </node>
      <node id="772">
        <label>cyber/service_discovery/role/role.h</label>
        <link refid="role_8h_source"/>
        <childnode refid="768" relation="include">
        </childnode>
        <childnode refid="746" relation="include">
        </childnode>
        <childnode refid="747" relation="include">
        </childnode>
        <childnode refid="753" relation="include">
        </childnode>
      </node>
      <node id="784">
        <label>cyber/transport/rtps/participant.h</label>
      </node>
      <node id="745">
        <label>/home/dexin/code/Edith/cyber/node/writer.h</label>
        <link refid="writer.h"/>
        <childnode refid="746" relation="include">
        </childnode>
        <childnode refid="747" relation="include">
        </childnode>
        <childnode refid="748" relation="include">
        </childnode>
        <childnode refid="749" relation="include">
        </childnode>
        <childnode refid="750" relation="include">
        </childnode>
        <childnode refid="754" relation="include">
        </childnode>
        <childnode refid="755" relation="include">
        </childnode>
        <childnode refid="785" relation="include">
        </childnode>
      </node>
      <node id="777">
        <label>fastrtps/publisher/Publisher.h</label>
      </node>
      <node id="747">
        <label>string</label>
      </node>
      <node id="757">
        <label>map</label>
      </node>
      <node id="766">
        <label>unordered_set</label>
      </node>
      <node id="749">
        <label>cyber/common/log.h</label>
      </node>
      <node id="754">
        <label>cyber/proto/topology_change.pb.h</label>
      </node>
      <node id="770">
        <label>cyber/service_discovery/container/multi_value_warehouse.h</label>
        <link refid="multi__value__warehouse_8h_source"/>
        <childnode refid="768" relation="include">
        </childnode>
        <childnode refid="765" relation="include">
        </childnode>
        <childnode refid="748" relation="include">
        </childnode>
        <childnode refid="769" relation="include">
        </childnode>
        <childnode refid="771" relation="include">
        </childnode>
      </node>
      <node id="764">
        <label>cyber/service_discovery/specific_manager/channel_manager.h</label>
        <link refid="channel__manager_8h_source"/>
        <childnode refid="746" relation="include">
        </childnode>
        <childnode refid="747" relation="include">
        </childnode>
        <childnode refid="765" relation="include">
        </childnode>
        <childnode refid="766" relation="include">
        </childnode>
        <childnode refid="748" relation="include">
        </childnode>
        <childnode refid="767" relation="include">
        </childnode>
        <childnode refid="770" relation="include">
        </childnode>
        <childnode refid="773" relation="include">
        </childnode>
        <childnode refid="772" relation="include">
        </childnode>
        <childnode refid="774" relation="include">
        </childnode>
      </node>
      <node id="782">
        <label>cyber/service_discovery/specific_manager/node_manager.h</label>
        <link refid="node__manager_8h_source"/>
        <childnode refid="746" relation="include">
        </childnode>
        <childnode refid="747" relation="include">
        </childnode>
        <childnode refid="748" relation="include">
        </childnode>
        <childnode refid="773" relation="include">
        </childnode>
        <childnode refid="772" relation="include">
        </childnode>
        <childnode refid="774" relation="include">
        </childnode>
      </node>
      <node id="755">
        <label>cyber/service_discovery/topology_manager.h</label>
        <link refid="topology__manager_8h_source"/>
        <childnode refid="751" relation="include">
        </childnode>
        <childnode refid="756" relation="include">
        </childnode>
        <childnode refid="757" relation="include">
        </childnode>
        <childnode refid="746" relation="include">
        </childnode>
        <childnode refid="752" relation="include">
        </childnode>
        <childnode refid="747" relation="include">
        </childnode>
        <childnode refid="758" relation="include">
        </childnode>
        <childnode refid="759" relation="include">
        </childnode>
        <childnode refid="760" relation="include">
        </childnode>
        <childnode refid="764" relation="include">
        </childnode>
        <childnode refid="782" relation="include">
        </childnode>
        <childnode refid="783" relation="include">
        </childnode>
        <childnode refid="784" relation="include">
        </childnode>
      </node>
      <node id="750">
        <label>cyber/node/writer_base.h</label>
        <link refid="writer__base_8h_source"/>
        <childnode refid="751" relation="include">
        </childnode>
        <childnode refid="752" relation="include">
        </childnode>
        <childnode refid="747" relation="include">
        </childnode>
        <childnode refid="748" relation="include">
        </childnode>
        <childnode refid="753" relation="include">
        </childnode>
      </node>
      <node id="767">
        <label>cyber/service_discovery/container/graph.h</label>
        <link refid="graph_8h_source"/>
        <childnode refid="768" relation="include">
        </childnode>
        <childnode refid="747" relation="include">
        </childnode>
        <childnode refid="765" relation="include">
        </childnode>
        <childnode refid="769" relation="include">
        </childnode>
      </node>
      <node id="773">
        <label>cyber/service_discovery/container/single_value_warehouse.h</label>
        <link refid="single__value__warehouse_8h_source"/>
        <childnode refid="768" relation="include">
        </childnode>
        <childnode refid="765" relation="include">
        </childnode>
        <childnode refid="748" relation="include">
        </childnode>
        <childnode refid="769" relation="include">
        </childnode>
        <childnode refid="771" relation="include">
        </childnode>
      </node>
      <node id="763">
        <label>fastrtps/participant/ParticipantListener.h</label>
      </node>
      <node id="774">
        <label>cyber/service_discovery/specific_manager/manager.h</label>
        <link refid="manager_8h_source"/>
        <childnode refid="751" relation="include">
        </childnode>
        <childnode refid="756" relation="include">
        </childnode>
        <childnode refid="752" relation="include">
        </childnode>
        <childnode refid="747" relation="include">
        </childnode>
        <childnode refid="761" relation="include">
        </childnode>
        <childnode refid="775" relation="include">
        </childnode>
        <childnode refid="776" relation="include">
        </childnode>
        <childnode refid="762" relation="include">
        </childnode>
        <childnode refid="777" relation="include">
        </childnode>
        <childnode refid="778" relation="include">
        </childnode>
        <childnode refid="758" relation="include">
        </childnode>
        <childnode refid="754" relation="include">
        </childnode>
        <childnode refid="779" relation="include">
        </childnode>
      </node>
      <node id="748">
        <label>vector</label>
      </node>
      <node id="760">
        <label>cyber/service_discovery/communication/participant_listener.h</label>
        <link refid="participant__listener_8h_source"/>
        <childnode refid="756" relation="include">
        </childnode>
        <childnode refid="752" relation="include">
        </childnode>
        <childnode refid="761" relation="include">
        </childnode>
        <childnode refid="762" relation="include">
        </childnode>
        <childnode refid="763" relation="include">
        </childnode>
      </node>
      <node id="761">
        <label>fastrtps/Domain.h</label>
      </node>
      <node id="778">
        <label>fastrtps/subscriber/Subscriber.h</label>
      </node>
      <node id="781">
        <label>fastrtps/subscriber/SubscriberListener.h</label>
      </node>
      <node id="759">
        <label>cyber/common/macros.h</label>
      </node>
      <node id="765">
        <label>unordered_map</label>
      </node>
      <node id="752">
        <label>mutex</label>
      </node>
      <node id="785">
        <label>cyber/transport/transport.h</label>
      </node>
      <node id="783">
        <label>cyber/service_discovery/specific_manager/service_manager.h</label>
        <link refid="service__manager_8h_source"/>
        <childnode refid="746" relation="include">
        </childnode>
        <childnode refid="747" relation="include">
        </childnode>
        <childnode refid="748" relation="include">
        </childnode>
        <childnode refid="770" relation="include">
        </childnode>
        <childnode refid="773" relation="include">
        </childnode>
        <childnode refid="772" relation="include">
        </childnode>
        <childnode refid="774" relation="include">
        </childnode>
      </node>
      <node id="746">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="794">
        <label>/home/dexin/code/Edith/cyber/node/node_service_impl.h</label>
        <link refid="node__service__impl_8h_source"/>
        <childnode refid="788" relation="include">
        </childnode>
      </node>
      <node id="788">
        <label>/home/dexin/code/Edith/cyber/node/node.h</label>
        <link refid="node_8h_source"/>
        <childnode refid="789" relation="include">
        </childnode>
        <childnode refid="790" relation="include">
        </childnode>
      </node>
      <node id="789">
        <label>/home/dexin/code/Edith/cyber/cyber.h</label>
        <link refid="cyber_8h_source"/>
      </node>
      <node id="793">
        <label>/home/dexin/code/Edith/cyber/service/client.h</label>
        <link refid="client_8h_source"/>
        <childnode refid="794" relation="include">
        </childnode>
        <childnode refid="795" relation="include">
        </childnode>
      </node>
      <node id="790">
        <label>/home/dexin/code/Edith/cyber/component/component_base.h</label>
        <link refid="component__base_8h_source"/>
        <childnode refid="791" relation="include">
        </childnode>
        <childnode refid="792" relation="include">
        </childnode>
      </node>
      <node id="787">
        <label>/home/dexin/code/Edith/cyber/node/node_channel_impl.h</label>
        <link refid="node__channel__impl_8h_source"/>
        <childnode refid="788" relation="include">
        </childnode>
        <childnode refid="793" relation="include">
        </childnode>
        <childnode refid="796" relation="include">
        </childnode>
      </node>
      <node id="786">
        <label>/home/dexin/code/Edith/cyber/node/writer.h</label>
        <link refid="writer.h"/>
        <childnode refid="787" relation="include">
        </childnode>
      </node>
      <node id="797">
        <label>/home/dexin/code/Edith/cyber/parameter/parameter_server.h</label>
        <link refid="parameter__server_8h_source"/>
      </node>
      <node id="792">
        <label>/home/dexin/code/Edith/cyber/component/timer_component.h</label>
        <link refid="timer__component_8h_source"/>
      </node>
      <node id="795">
        <label>/home/dexin/code/Edith/cyber/parameter/parameter_client.h</label>
        <link refid="parameter__client_8h_source"/>
      </node>
      <node id="796">
        <label>/home/dexin/code/Edith/cyber/service/service.h</label>
        <link refid="service_8h_source"/>
        <childnode refid="794" relation="include">
        </childnode>
        <childnode refid="797" relation="include">
        </childnode>
      </node>
      <node id="791">
        <label>/home/dexin/code/Edith/cyber/component/component.h</label>
        <link refid="component_8h_source"/>
        <childnode refid="789" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classapollo_1_1cyber_1_1_writer" prot="public">apollo::cyber::Writer</innerclass>
    <innernamespace refid="namespaceapollo">apollo</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber">apollo::cyber</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2018<sp/>The<sp/>Apollo<sp/>Authors.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYBER_NODE_WRITER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CYBER_NODE_WRITER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/common/log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/node/writer_base.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/proto/topology_change.pb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/service_discovery/topology_manager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/transport/transport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceapollo" kindref="compound">apollo</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecyber" kindref="compound">cyber</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="41" refid="classapollo_1_1cyber_1_1_writer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1_writer" kindref="compound">Writer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer_base" kindref="compound">WriterBase</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>TransmitterPtr<sp/>=<sp/>std::shared_ptr&lt;transport::Transmitter&lt;MessageT&gt;&gt;;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ChangeConnection<sp/>=</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>service_discovery::Manager::ChangeConnection;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer_1a8c4b7af7821be7e2911eec00549fb4db" kindref="member">Writer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>proto::RoleAttributes&amp;<sp/>role_attr);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classapollo_1_1cyber_1_1_writer" kindref="compound">Writer</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer_1a3a8efad4bf1917f541d41e3102ef8776" kindref="member">Init</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer_1a915a8e6c0bb86a98f4ab09d41a9d3242" kindref="member">Shutdown</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer_1ac801147d965824c910da92626e4b9b05" kindref="member">Write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MessageT&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer_1ac801147d965824c910da92626e4b9b05" kindref="member">Write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;MessageT&gt;&amp;<sp/>msg_ptr);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer_1a0eba2d4599a273a2dc56e5ca5845ebd1" kindref="member">HasReader</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer_1abf208c7a535967956542965c9a6d6e58" kindref="member">GetReaders</ref>(std::vector&lt;proto::RoleAttributes&gt;*<sp/>readers)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>JoinTheTopology();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LeaveTheTopology();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnChannelChange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>proto::ChangeMsg&amp;<sp/>change_msg);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>TransmitterPtr<sp/>transmitter_;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>ChangeConnection<sp/>change_conn_;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>service_discovery::ChannelManagerPtr<sp/>channel_manager_;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="114" refid="classapollo_1_1cyber_1_1_writer_1a8c4b7af7821be7e2911eec00549fb4db" refkind="member"><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1_writer_1a8c4b7af7821be7e2911eec00549fb4db" kindref="member">Writer&lt;MessageT&gt;::Writer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>proto::RoleAttributes&amp;<sp/>role_attr)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classapollo_1_1cyber_1_1_writer_base" kindref="compound">WriterBase</ref>(role_attr),<sp/>transmitter_(nullptr),<sp/>channel_manager_(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1_writer" kindref="compound">Writer&lt;MessageT&gt;::~Writer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1_writer_1a915a8e6c0bb86a98f4ab09d41a9d3242" kindref="member">Shutdown</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="123" refid="classapollo_1_1cyber_1_1_writer_1a3a8efad4bf1917f541d41e3102ef8776" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer_1a3a8efad4bf1917f541d41e3102ef8776" kindref="member">Writer&lt;MessageT&gt;::Init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>g(lock_);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(init_)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>transmitter_<sp/>=</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transport::Transport::Instance()-&gt;CreateTransmitter&lt;MessageT&gt;(</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>role_attr_);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transmitter_<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>init_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>this-&gt;role_attr_.set_id(transmitter_-&gt;id().HashValue());</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>channel_manager_<sp/>=</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>service_discovery::TopologyManager::Instance()-&gt;channel_manager();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>JoinTheTopology();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="145" refid="classapollo_1_1cyber_1_1_writer_1a915a8e6c0bb86a98f4ab09d41a9d3242" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer_1a915a8e6c0bb86a98f4ab09d41a9d3242" kindref="member">Writer&lt;MessageT&gt;::Shutdown</ref>()<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>g(lock_);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!init_)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>init_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>LeaveTheTopology();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>transmitter_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>channel_manager_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="159" refid="classapollo_1_1cyber_1_1_writer_1ac801147d965824c910da92626e4b9b05" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer_1ac801147d965824c910da92626e4b9b05" kindref="member">Writer&lt;MessageT&gt;::Write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MessageT&amp;<sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>RETURN_VAL_IF(!<ref refid="classapollo_1_1cyber_1_1_writer_base_1a76acead79b6c85ed9450ba0cdaed7d42" kindref="member">WriterBase::IsInit</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>msg_ptr<sp/>=<sp/>std::make_shared&lt;MessageT&gt;(msg);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer_1ac801147d965824c910da92626e4b9b05" kindref="member">Write</ref>(msg_ptr);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="166" refid="classapollo_1_1cyber_1_1_writer_1a793eaf46f34f2d46d0225a1a6cc3fd50" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer_1ac801147d965824c910da92626e4b9b05" kindref="member">Writer&lt;MessageT&gt;::Write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;MessageT&gt;&amp;<sp/>msg_ptr)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>RETURN_VAL_IF(!<ref refid="classapollo_1_1cyber_1_1_writer_base_1a76acead79b6c85ed9450ba0cdaed7d42" kindref="member">WriterBase::IsInit</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transmitter_-&gt;Transmit(msg_ptr);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer" kindref="compound">Writer&lt;MessageT&gt;::JoinTheTopology</ref>()<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>listener</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>change_conn_<sp/>=<sp/>channel_manager_-&gt;AddChangeListener(std::bind(</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classapollo_1_1cyber_1_1_writer" kindref="compound">Writer&lt;MessageT&gt;::OnChannelChange</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>std::placeholders::_1));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>peer<sp/>readers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>channel_name<sp/>=<sp/>this-&gt;role_attr_.channel_name();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>std::vector&lt;proto::RoleAttributes&gt;<sp/>readers;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>channel_manager_-&gt;GetReadersOfChannel(channel_name,<sp/>&amp;readers);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>reader<sp/>:<sp/>readers)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>transmitter_-&gt;Enable(reader);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>channel_manager_-&gt;Join(this-&gt;role_attr_,<sp/>proto::RoleType::ROLE_WRITER,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message::HasSerializer&lt;MessageT&gt;::value);</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer" kindref="compound">Writer&lt;MessageT&gt;::LeaveTheTopology</ref>()<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>channel_manager_-&gt;RemoveChangeListener(change_conn_);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>channel_manager_-&gt;Leave(this-&gt;role_attr_,<sp/>proto::RoleType::ROLE_WRITER);</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer" kindref="compound">Writer&lt;MessageT&gt;::OnChannelChange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>proto::ChangeMsg&amp;<sp/>change_msg)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(change_msg.role_type()<sp/>!=<sp/>proto::RoleType::ROLE_READER)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>reader_attr<sp/>=<sp/>change_msg.role_attr();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader_attr.channel_name()<sp/>!=<sp/>this-&gt;role_attr_.channel_name())<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>operate_type<sp/>=<sp/>change_msg.operate_type();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operate_type<sp/>==<sp/>proto::OperateType::OPT_JOIN)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>transmitter_-&gt;Enable(reader_attr);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>transmitter_-&gt;Disable(reader_attr);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="215" refid="classapollo_1_1cyber_1_1_writer_1a0eba2d4599a273a2dc56e5ca5845ebd1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer_1a0eba2d4599a273a2dc56e5ca5845ebd1" kindref="member">Writer&lt;MessageT&gt;::HasReader</ref>()<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>RETURN_VAL_IF(!<ref refid="classapollo_1_1cyber_1_1_writer_base_1a76acead79b6c85ed9450ba0cdaed7d42" kindref="member">WriterBase::IsInit</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>channel_manager_-&gt;HasReader(role_attr_.channel_name());</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT&gt;</highlight></codeline>
<codeline lineno="221" refid="classapollo_1_1cyber_1_1_writer_1abf208c7a535967956542965c9a6d6e58" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_writer_1abf208c7a535967956542965c9a6d6e58" kindref="member">Writer&lt;MessageT&gt;::GetReaders</ref>(std::vector&lt;proto::RoleAttributes&gt;*<sp/>readers)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readers<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classapollo_1_1cyber_1_1_writer_base_1a76acead79b6c85ed9450ba0cdaed7d42" kindref="member">WriterBase::IsInit</ref>())<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>channel_manager_-&gt;GetReadersOfChannel(role_attr_.channel_name(),<sp/>readers);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cyber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>apollo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>CYBER_NODE_WRITER_H_</highlight></codeline>
    </programlisting>
    <location file="/home/dexin/code/Edith/cyber/node/writer.h"/>
  </compounddef>
</doxygen>
