<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classcyber__py3_1_1record_1_1_record_writer" kind="class" language="Python" prot="public">
    <compoundname>cyber_py3::record::RecordWriter</compoundname>
    <basecompoundref prot="public" virt="non-virtual">object</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classcyber__py3_1_1record_1_1_record_writer_1a7d8f85b20598a5fffafbeb1fa50631a6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>cyber_py3.record.RecordWriter::record_writer</definition>
        <argsstring></argsstring>
        <name>record_writer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" line="137" column="1" bodyfile="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcyber__py3_1_1record_1_1_record_writer_1aa5ba063134ec96fab0c63ad454b67286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def cyber_py3.record.RecordWriter.__init__</definition>
        <argsstring>(self, file_segmentation_size_kb=0, file_segmentation_interval_sec=0)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>file_segmentation_size_kb</type>
          <defname>file_segmentation_size_kb</defname>
          <defval>0</defval>
        </param>
        <param>
          <type>file_segmentation_interval_sec</type>
          <defname>file_segmentation_interval_sec</defname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>the constructor function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_segmentation_size_kb</parametername>
</parameternamelist>
<parameterdescription>
<para>size to segment the file, 0 is no segmentation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_segmentation_interval_sec</parametername>
</parameternamelist>
<parameterdescription>
<para>size to segment the file, 0 is no segmentation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" line="135" column="1" bodyfile="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" bodystart="136" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classcyber__py3_1_1record_1_1_record_writer_1aa78d20f35bba98ec9e4f8183a805e644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def cyber_py3.record.RecordWriter.__del__</definition>
        <argsstring>(self)</argsstring>
        <name>__del__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" line="143" column="1" bodyfile="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classcyber__py3_1_1record_1_1_record_writer_1a1f63a7d837682a0ab345a9c52e6a907c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def cyber_py3.record.RecordWriter.open</definition>
        <argsstring>(self, path)</argsstring>
        <name>open</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>path</type>
          <defname>path</defname>
        </param>
        <briefdescription>
<para>Open record file for write. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>the file path.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Success is True, other False. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" line="152" column="1" bodyfile="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classcyber__py3_1_1record_1_1_record_writer_1ab3ed96ddca88aec658563845f0f04775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def cyber_py3.record.RecordWriter.close</definition>
        <argsstring>(self)</argsstring>
        <name>close</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Close record file. </para>        </briefdescription>
        <detaileddescription>
<para><verbatim>Close record file.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" line="157" column="1" bodyfile="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" bodystart="157" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classcyber__py3_1_1record_1_1_record_writer_1a922b2a7b0913c404ae71c5c37d1a8600" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def cyber_py3.record.RecordWriter.write_channel</definition>
        <argsstring>(self, channel_name, type_name, proto_desc)</argsstring>
        <name>write_channel</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>channel_name</type>
          <defname>channel_name</defname>
        </param>
        <param>
          <type>type_name</type>
          <defname>type_name</defname>
        </param>
        <param>
          <type>proto_desc</type>
          <defname>proto_desc</defname>
        </param>
        <briefdescription>
<para>Writer channel by channelname, typename, protodesc. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel name to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_name</parametername>
</parameternamelist>
<parameterdescription>
<para>a string of message type name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proto_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>the message descriptor.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Success is True, other False. <verbatim>Writer channel by channelname,typename,protodesc
</verbatim> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" line="171" column="1" bodyfile="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" bodystart="171" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classcyber__py3_1_1record_1_1_record_writer_1afe5df86b16dcb53206b6917fb42d3d17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def cyber_py3.record.RecordWriter.write_message</definition>
        <argsstring>(self, channel_name, data, time, raw=True)</argsstring>
        <name>write_message</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>channel_name</type>
          <defname>channel_name</defname>
        </param>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <param>
          <type>time</type>
          <defname>time</defname>
        </param>
        <param>
          <type>raw</type>
          <defname>raw</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
<para>Writer msg: channelname, data, writer time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel_name</parametername>
</parameternamelist>
<parameterdescription>
<para>channel name to write. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>when raw is True, data processed as a rawdata, other it needs to SerializeToString </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>message time. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>raw</parametername>
</parameternamelist>
<parameterdescription>
<para>the flag implies data whether or not a rawdata.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Success is True, other False. <verbatim>Writer msg:channelname,rawmsg,writer time
</verbatim> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" line="187" column="1" bodyfile="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" bodystart="187" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classcyber__py3_1_1record_1_1_record_writer_1acdf782e154beadeebdc43157819bd962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def cyber_py3.record.RecordWriter.set_size_fileseg</definition>
        <argsstring>(self, size_kilobytes)</argsstring>
        <name>set_size_fileseg</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>size_kilobytes</type>
          <defname>size_kilobytes</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Return filesegment size.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" line="204" column="1" bodyfile="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" bodystart="204" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classcyber__py3_1_1record_1_1_record_writer_1acadc6f390effe9fa0f71607587772b39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def cyber_py3.record.RecordWriter.set_intervaltime_fileseg</definition>
        <argsstring>(self, time_sec)</argsstring>
        <name>set_intervaltime_fileseg</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>time_sec</type>
          <defname>time_sec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Return file interval time.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" line="211" column="1" bodyfile="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" bodystart="211" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classcyber__py3_1_1record_1_1_record_writer_1a726a6c096105c9c9135b58e27cb708d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def cyber_py3.record.RecordWriter.get_messagenumber</definition>
        <argsstring>(self, channel_name)</argsstring>
        <name>get_messagenumber</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>channel_name</type>
          <defname>channel_name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Return message count.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" line="218" column="1" bodyfile="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" bodystart="218" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classcyber__py3_1_1record_1_1_record_writer_1abac93968890d7dbb87f129cfa3ad520c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def cyber_py3.record.RecordWriter.get_messagetype</definition>
        <argsstring>(self, channel_name)</argsstring>
        <name>get_messagetype</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>channel_name</type>
          <defname>channel_name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Return message type.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" line="225" column="1" bodyfile="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" bodystart="225" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classcyber__py3_1_1record_1_1_record_writer_1a92b373e7b9d074aa6523a71345a2e23d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def cyber_py3.record.RecordWriter.get_protodesc</definition>
        <argsstring>(self, channel_name)</argsstring>
        <name>get_protodesc</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>channel_name</type>
          <defname>channel_name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Return message protodesc.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" line="232" column="1" bodyfile="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" bodystart="232" bodyend="238"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Class for cyber RecordWriter wrapper.
</verbatim> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="684">
        <label>object</label>
      </node>
      <node id="683">
        <label>cyber_py3.record.RecordWriter</label>
        <link refid="classcyber__py3_1_1record_1_1_record_writer"/>
        <childnode refid="684" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="686">
        <label>object</label>
      </node>
      <node id="685">
        <label>cyber_py3.record.RecordWriter</label>
        <link refid="classcyber__py3_1_1record_1_1_record_writer"/>
        <childnode refid="686" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" line="124" column="1" bodyfile="/home/dexin/code/Edith/cyber/python/cyber_py3/record.py" bodystart="124" bodyend="238"/>
    <listofallmembers>
      <member refid="classcyber__py3_1_1record_1_1_record_writer_1aa78d20f35bba98ec9e4f8183a805e644" prot="public" virt="non-virtual"><scope>cyber_py3::record::RecordWriter</scope><name>__del__</name></member>
      <member refid="classcyber__py3_1_1record_1_1_record_writer_1aa5ba063134ec96fab0c63ad454b67286" prot="public" virt="non-virtual"><scope>cyber_py3::record::RecordWriter</scope><name>__init__</name></member>
      <member refid="classcyber__py3_1_1record_1_1_record_writer_1ab3ed96ddca88aec658563845f0f04775" prot="public" virt="non-virtual"><scope>cyber_py3::record::RecordWriter</scope><name>close</name></member>
      <member refid="classcyber__py3_1_1record_1_1_record_writer_1a726a6c096105c9c9135b58e27cb708d5" prot="public" virt="non-virtual"><scope>cyber_py3::record::RecordWriter</scope><name>get_messagenumber</name></member>
      <member refid="classcyber__py3_1_1record_1_1_record_writer_1abac93968890d7dbb87f129cfa3ad520c" prot="public" virt="non-virtual"><scope>cyber_py3::record::RecordWriter</scope><name>get_messagetype</name></member>
      <member refid="classcyber__py3_1_1record_1_1_record_writer_1a92b373e7b9d074aa6523a71345a2e23d" prot="public" virt="non-virtual"><scope>cyber_py3::record::RecordWriter</scope><name>get_protodesc</name></member>
      <member refid="classcyber__py3_1_1record_1_1_record_writer_1a1f63a7d837682a0ab345a9c52e6a907c" prot="public" virt="non-virtual"><scope>cyber_py3::record::RecordWriter</scope><name>open</name></member>
      <member refid="classcyber__py3_1_1record_1_1_record_writer_1a7d8f85b20598a5fffafbeb1fa50631a6" prot="public" virt="non-virtual"><scope>cyber_py3::record::RecordWriter</scope><name>record_writer</name></member>
      <member refid="classcyber__py3_1_1record_1_1_record_writer_1acadc6f390effe9fa0f71607587772b39" prot="public" virt="non-virtual"><scope>cyber_py3::record::RecordWriter</scope><name>set_intervaltime_fileseg</name></member>
      <member refid="classcyber__py3_1_1record_1_1_record_writer_1acdf782e154beadeebdc43157819bd962" prot="public" virt="non-virtual"><scope>cyber_py3::record::RecordWriter</scope><name>set_size_fileseg</name></member>
      <member refid="classcyber__py3_1_1record_1_1_record_writer_1a922b2a7b0913c404ae71c5c37d1a8600" prot="public" virt="non-virtual"><scope>cyber_py3::record::RecordWriter</scope><name>write_channel</name></member>
      <member refid="classcyber__py3_1_1record_1_1_record_writer_1afe5df86b16dcb53206b6917fb42d3d17" prot="public" virt="non-virtual"><scope>cyber_py3::record::RecordWriter</scope><name>write_message</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
