<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="component__base_8h" kind="file" language="C++">
    <compoundname>component_base.h</compoundname>
    <includes local="no">atomic</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="yes">cyber/class_loader/class_loader.h</includes>
    <includes local="yes">cyber/common/environment.h</includes>
    <includes local="yes">cyber/common/file.h</includes>
    <includes refid="node_8h" local="yes">cyber/node/node.h</includes>
    <includes local="yes">cyber/proto/component_conf.pb.h</includes>
    <includes local="yes">cyber/scheduler/scheduler.h</includes>
    <includes local="yes">gflags/gflags.h</includes>
    <includedby refid="component_8h" local="yes">/home/dexin/code/Edith/cyber/component/component.h</includedby>
    <includedby refid="timer__component_8h" local="yes">/home/dexin/code/Edith/cyber/component/timer_component.h</includedby>
    <incdepgraph>
      <node id="118">
        <label>list</label>
      </node>
      <node id="169">
        <label>cyber/proto/run_mode_conf.pb.h</label>
      </node>
      <node id="144">
        <label>cyber/service_discovery/container/warehouse_base.h</label>
        <link refid="warehouse__base_8h_source"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>cyber/node/node_service_impl.h</label>
        <link refid="node__service__impl_8h_source"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>cyber/base/atomic_rw_lock.h</label>
      </node>
      <node id="136">
        <label>fastrtps/participant/Participant.h</label>
      </node>
      <node id="101">
        <label>atomic</label>
      </node>
      <node id="105">
        <label>cyber/class_loader/class_loader.h</label>
      </node>
      <node id="122">
        <label>cyber/croutine/routine_factory.h</label>
      </node>
      <node id="149">
        <label>fastrtps/attributes/PublisherAttributes.h</label>
      </node>
      <node id="133">
        <label>cyber/base/signal.h</label>
      </node>
      <node id="108">
        <label>cyber/node/node.h</label>
        <link refid="node_8h_source"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>functional</label>
      </node>
      <node id="160">
        <label>limits</label>
      </node>
      <node id="153">
        <label>cyber/service_discovery/communication/subscriber_listener.h</label>
        <link refid="subscriber__listener_8h_source"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>cyber/time/duration.h</label>
        <link refid="duration_8h_source"/>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>cyber/proto/role_attributes.pb.h</label>
      </node>
      <node id="150">
        <label>fastrtps/attributes/SubscriberAttributes.h</label>
      </node>
      <node id="154">
        <label>fastrtps/subscriber/SampleInfo.h</label>
      </node>
      <node id="171">
        <label>cyber/service/client.h</label>
        <link refid="client_8h_source"/>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>cstdint</label>
      </node>
      <node id="145">
        <label>cyber/service_discovery/role/role.h</label>
        <link refid="role_8h_source"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
      <node id="158">
        <label>cyber/transport/rtps/participant.h</label>
      </node>
      <node id="123">
        <label>cyber/data/data_visitor.h</label>
      </node>
      <node id="111">
        <label>cyber/node/node_channel_impl.h</label>
        <link refid="node__channel__impl_8h_source"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>/home/dexin/code/Edith/cyber/component/component_base.h</label>
        <link refid="component_base.h"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
      </node>
      <node id="163">
        <label>cmath</label>
      </node>
      <node id="165">
        <label>stdexcept</label>
      </node>
      <node id="166">
        <label>cyber/node/writer.h</label>
        <link refid="writer_8h_source"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>fastrtps/publisher/Publisher.h</label>
      </node>
      <node id="114">
        <label>cyber/common/global_data.h</label>
      </node>
      <node id="103">
        <label>string</label>
      </node>
      <node id="124">
        <label>cyber/node/reader_base.h</label>
        <link refid="reader__base_8h_source"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>map</label>
      </node>
      <node id="126">
        <label>cyber/common/util.h</label>
      </node>
      <node id="139">
        <label>unordered_set</label>
      </node>
      <node id="167">
        <label>cyber/common/log.h</label>
      </node>
      <node id="159">
        <label>cyber/time/time.h</label>
        <link refid="time_8h_source"/>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>cyber/proto/topology_change.pb.h</label>
      </node>
      <node id="143">
        <label>cyber/service_discovery/container/multi_value_warehouse.h</label>
        <link refid="multi__value__warehouse_8h_source"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>cyber/blocker/intra_writer.h</label>
      </node>
      <node id="138">
        <label>cyber/service_discovery/specific_manager/channel_manager.h</label>
        <link refid="channel__manager_8h_source"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
      <node id="156">
        <label>cyber/service_discovery/specific_manager/node_manager.h</label>
        <link refid="node__manager_8h_source"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
      <node id="182">
        <label>gflags/gflags.h</label>
      </node>
      <node id="179">
        <label>cyber/scheduler/scheduler.h</label>
      </node>
      <node id="131">
        <label>cyber/service_discovery/topology_manager.h</label>
        <link refid="topology__manager_8h_source"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>cyber/node/writer_base.h</label>
        <link refid="writer__base_8h_source"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>cyber/service_discovery/container/graph.h</label>
        <link refid="graph_8h_source"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>cyber/service_discovery/container/single_value_warehouse.h</label>
        <link refid="single__value__warehouse_8h_source"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="137">
        <label>fastrtps/participant/ParticipantListener.h</label>
      </node>
      <node id="174">
        <label>tuple</label>
      </node>
      <node id="172">
        <label>future</label>
      </node>
      <node id="175">
        <label>cyber/common/types.h</label>
      </node>
      <node id="148">
        <label>cyber/service_discovery/specific_manager/manager.h</label>
        <link refid="manager_8h_source"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
      </node>
      <node id="180">
        <label>cyber/service/service_base.h</label>
        <link refid="service__base_8h_source"/>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>cyber/event/perf_event_cache.h</label>
      </node>
      <node id="104">
        <label>vector</label>
      </node>
      <node id="110">
        <label>utility</label>
      </node>
      <node id="130">
        <label>cyber/scheduler/scheduler_factory.h</label>
      </node>
      <node id="173">
        <label>sstream</label>
      </node>
      <node id="112">
        <label>cyber/blocker/intra_reader.h</label>
      </node>
      <node id="134">
        <label>cyber/service_discovery/communication/participant_listener.h</label>
        <link refid="participant__listener_8h_source"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>fastrtps/Domain.h</label>
      </node>
      <node id="152">
        <label>fastrtps/subscriber/Subscriber.h</label>
      </node>
      <node id="155">
        <label>fastrtps/subscriber/SubscriberListener.h</label>
      </node>
      <node id="181">
        <label>cyber/proto/component_conf.pb.h</label>
      </node>
      <node id="164">
        <label>iostream</label>
      </node>
      <node id="125">
        <label>cyber/common/macros.h</label>
      </node>
      <node id="120">
        <label>unordered_map</label>
      </node>
      <node id="162">
        <label>climits</label>
      </node>
      <node id="178">
        <label>cyber/service/service.h</label>
        <link refid="service_8h_source"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>mutex</label>
      </node>
      <node id="177">
        <label>chrono</label>
      </node>
      <node id="106">
        <label>cyber/common/environment.h</label>
      </node>
      <node id="176">
        <label>cyber/service/client_base.h</label>
        <link refid="client__base_8h_source"/>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>cyber/common/file.h</label>
      </node>
      <node id="121">
        <label>cyber/blocker/blocker.h</label>
      </node>
      <node id="128">
        <label>cyber/transport/transport.h</label>
      </node>
      <node id="117">
        <label>algorithm</label>
      </node>
      <node id="116">
        <label>cyber/node/reader.h</label>
        <link refid="reader_8h_source"/>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>cyber/message/message_traits.h</label>
      </node>
      <node id="157">
        <label>cyber/service_discovery/specific_manager/service_manager.h</label>
        <link refid="service__manager_8h_source"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="185">
        <label>/home/dexin/code/Edith/cyber/cyber.h</label>
        <link refid="cyber_8h_source"/>
      </node>
      <node id="183">
        <label>/home/dexin/code/Edith/cyber/component/component_base.h</label>
        <link refid="component_base.h"/>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>/home/dexin/code/Edith/cyber/component/timer_component.h</label>
        <link refid="timer__component_8h_source"/>
      </node>
      <node id="184">
        <label>/home/dexin/code/Edith/cyber/component/component.h</label>
        <link refid="component_8h_source"/>
        <childnode refid="185" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classapollo_1_1cyber_1_1_component_base" prot="public">apollo::cyber::ComponentBase</innerclass>
    <innernamespace refid="namespaceapollo">apollo</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber">apollo::cyber</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2018<sp/>The<sp/>Apollo<sp/>Authors.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYBER_COMPONENT_COMPONENT_BASE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CYBER_COMPONENT_COMPONENT_BASE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/class_loader/class_loader.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/common/environment.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/common/file.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/node/node.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/proto/component_conf.pb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/scheduler/scheduler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gflags/gflags.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceapollo" kindref="compound">apollo</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecyber" kindref="compound">cyber</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>apollo::cyber::proto::ComponentConfig;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>apollo::cyber::proto::TimerComponentConfig;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classapollo_1_1cyber_1_1_component_base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1_component_base" kindref="compound">ComponentBase</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::enable_shared_from_this&lt;ComponentBase&gt;<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_reader" kindref="compound">Reader</ref><sp/>=<sp/><ref refid="classapollo_1_1cyber_1_1_reader" kindref="compound">cyber::Reader&lt;M&gt;</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classapollo_1_1cyber_1_1_component_base" kindref="compound">ComponentBase</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Initialize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ComponentConfig&amp;<sp/>config)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Initialize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimerComponentConfig&amp;<sp/>config)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Shutdown()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_shutdown_.exchange(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>reader<sp/>:<sp/>readers_)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;Shutdown();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>scheduler::Instance()-&gt;RemoveTask(node_-&gt;Name());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetProtoConfig(T*<sp/>config)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>common::GetProtoFromFile(config_file_path_,<sp/>config);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Init()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clear()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>ConfigFilePath()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>config_file_path_;<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LoadConfigFiles(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ComponentConfig&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!config.config_file_path().empty())<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.config_file_path()[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_file_path_<sp/>=<sp/>common::GetAbsolutePath(common::WorkRoot(),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.config_file_path());</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_file_path_<sp/>=<sp/>config.config_file_path();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!config.flag_file_path().empty())<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>flag_file_path<sp/>=<sp/>config.flag_file_path();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag_file_path[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag_file_path<sp/>=</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common::GetAbsolutePath(common::WorkRoot(),<sp/>flag_file_path);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>google::SetCommandLineOption(</highlight><highlight class="stringliteral">&quot;flagfile&quot;</highlight><highlight class="normal">,<sp/>flag_file_path.c_str());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LoadConfigFiles(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimerComponentConfig&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!config.config_file_path().empty())<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.config_file_path()[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_file_path_<sp/>=<sp/>common::GetAbsolutePath(common::WorkRoot(),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.config_file_path());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_file_path_<sp/>=<sp/>config.config_file_path();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!config.flag_file_path().empty())<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>flag_file_path<sp/>=<sp/>config.flag_file_path();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag_file_path[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag_file_path<sp/>=</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common::GetAbsolutePath(common::WorkRoot(),<sp/>flag_file_path);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>google::SetCommandLineOption(</highlight><highlight class="stringliteral">&quot;flagfile&quot;</highlight><highlight class="normal">,<sp/>flag_file_path.c_str());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>std::atomic&lt;bool&gt;<sp/>is_shutdown_<sp/>=<sp/>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Node&gt;<sp/>node_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>std::string<sp/>config_file_path_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>std::vector&lt;std::shared_ptr&lt;ReaderBase&gt;&gt;<sp/>readers_;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cyber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>apollo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>CYBER_COMPONENT_COMPONENT_BASE_H_</highlight></codeline>
    </programlisting>
    <location file="/home/dexin/code/Edith/cyber/component/component_base.h"/>
  </compounddef>
</doxygen>
