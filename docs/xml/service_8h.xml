<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="service_8h" kind="file" language="C++">
    <compoundname>service.h</compoundname>
    <includes local="no">list</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="yes">cyber/common/types.h</includes>
    <includes refid="node__channel__impl_8h" local="yes">cyber/node/node_channel_impl.h</includes>
    <includes local="yes">cyber/scheduler/scheduler.h</includes>
    <includes refid="service__base_8h" local="yes">cyber/service/service_base.h</includes>
    <includedby refid="node__service__impl_8h" local="yes">/home/dexin/code/Edith/cyber/node/node_service_impl.h</includedby>
    <includedby refid="parameter__server_8h" local="yes">/home/dexin/code/Edith/cyber/parameter/parameter_server.h</includedby>
    <incdepgraph>
      <node id="1341">
        <label>list</label>
      </node>
      <node id="1406">
        <label>cyber/proto/run_mode_conf.pb.h</label>
      </node>
      <node id="1381">
        <label>cyber/service_discovery/container/warehouse_base.h</label>
        <link refid="warehouse__base_8h_source"/>
        <childnode refid="1378" relation="include">
        </childnode>
        <childnode refid="1355" relation="include">
        </childnode>
        <childnode refid="1382" relation="include">
        </childnode>
      </node>
      <node id="1379">
        <label>cyber/base/atomic_rw_lock.h</label>
      </node>
      <node id="1373">
        <label>fastrtps/participant/Participant.h</label>
      </node>
      <node id="1360">
        <label>atomic</label>
      </node>
      <node id="1357">
        <label>cyber/croutine/routine_factory.h</label>
      </node>
      <node id="1386">
        <label>fastrtps/attributes/PublisherAttributes.h</label>
      </node>
      <node id="1370">
        <label>cyber/base/signal.h</label>
      </node>
      <node id="1368">
        <label>functional</label>
      </node>
      <node id="1397">
        <label>limits</label>
      </node>
      <node id="1390">
        <label>cyber/service_discovery/communication/subscriber_listener.h</label>
        <link refid="subscriber__listener_8h_source"/>
        <childnode refid="1368" relation="include">
        </childnode>
        <childnode refid="1353" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1372" relation="include">
        </childnode>
        <childnode refid="1391" relation="include">
        </childnode>
        <childnode refid="1389" relation="include">
        </childnode>
        <childnode refid="1392" relation="include">
        </childnode>
      </node>
      <node id="1398">
        <label>cyber/time/duration.h</label>
        <link refid="duration_8h_source"/>
        <childnode refid="1399" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
        <childnode refid="1378" relation="include">
        </childnode>
        <childnode refid="1401" relation="include">
        </childnode>
        <childnode refid="1402" relation="include">
        </childnode>
      </node>
      <node id="1383">
        <label>cyber/proto/role_attributes.pb.h</label>
      </node>
      <node id="1387">
        <label>fastrtps/attributes/SubscriberAttributes.h</label>
      </node>
      <node id="1391">
        <label>fastrtps/subscriber/SampleInfo.h</label>
      </node>
      <node id="1378">
        <label>cstdint</label>
      </node>
      <node id="1382">
        <label>cyber/service_discovery/role/role.h</label>
        <link refid="role_8h_source"/>
        <childnode refid="1378" relation="include">
        </childnode>
        <childnode refid="1342" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1383" relation="include">
        </childnode>
      </node>
      <node id="1395">
        <label>cyber/transport/rtps/participant.h</label>
      </node>
      <node id="1358">
        <label>cyber/data/data_visitor.h</label>
      </node>
      <node id="1346">
        <label>cyber/node/node_channel_impl.h</label>
        <link refid="node__channel__impl_8h_source"/>
        <childnode refid="1342" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1347" relation="include">
        </childnode>
        <childnode refid="1348" relation="include">
        </childnode>
        <childnode refid="1349" relation="include">
        </childnode>
        <childnode refid="1350" relation="include">
        </childnode>
        <childnode refid="1351" relation="include">
        </childnode>
        <childnode refid="1403" relation="include">
        </childnode>
        <childnode refid="1406" relation="include">
        </childnode>
      </node>
      <node id="1400">
        <label>cmath</label>
      </node>
      <node id="1402">
        <label>stdexcept</label>
      </node>
      <node id="1403">
        <label>cyber/node/writer.h</label>
        <link refid="writer_8h_source"/>
        <childnode refid="1342" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1355" relation="include">
        </childnode>
        <childnode refid="1404" relation="include">
        </childnode>
        <childnode refid="1405" relation="include">
        </childnode>
        <childnode refid="1365" relation="include">
        </childnode>
        <childnode refid="1367" relation="include">
        </childnode>
        <childnode refid="1364" relation="include">
        </childnode>
      </node>
      <node id="1388">
        <label>fastrtps/publisher/Publisher.h</label>
      </node>
      <node id="1349">
        <label>cyber/common/global_data.h</label>
      </node>
      <node id="1343">
        <label>string</label>
      </node>
      <node id="1359">
        <label>cyber/node/reader_base.h</label>
        <link refid="reader__base_8h_source"/>
        <childnode refid="1360" relation="include">
        </childnode>
        <childnode refid="1342" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1354" relation="include">
        </childnode>
        <childnode refid="1355" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
        <childnode refid="1362" relation="include">
        </childnode>
        <childnode refid="1363" relation="include">
        </childnode>
        <childnode refid="1364" relation="include">
        </childnode>
      </node>
      <node id="1369">
        <label>map</label>
      </node>
      <node id="1362">
        <label>cyber/common/util.h</label>
      </node>
      <node id="1376">
        <label>unordered_set</label>
      </node>
      <node id="1404">
        <label>cyber/common/log.h</label>
      </node>
      <node id="1396">
        <label>cyber/time/time.h</label>
        <link refid="time_8h_source"/>
        <childnode refid="1397" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1398" relation="include">
        </childnode>
      </node>
      <node id="1365">
        <label>cyber/proto/topology_change.pb.h</label>
      </node>
      <node id="1380">
        <label>cyber/service_discovery/container/multi_value_warehouse.h</label>
        <link refid="multi__value__warehouse_8h_source"/>
        <childnode refid="1378" relation="include">
        </childnode>
        <childnode refid="1354" relation="include">
        </childnode>
        <childnode refid="1355" relation="include">
        </childnode>
        <childnode refid="1379" relation="include">
        </childnode>
        <childnode refid="1381" relation="include">
        </childnode>
      </node>
      <node id="1348">
        <label>cyber/blocker/intra_writer.h</label>
      </node>
      <node id="1375">
        <label>cyber/service_discovery/specific_manager/channel_manager.h</label>
        <link refid="channel__manager_8h_source"/>
        <childnode refid="1342" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1354" relation="include">
        </childnode>
        <childnode refid="1376" relation="include">
        </childnode>
        <childnode refid="1355" relation="include">
        </childnode>
        <childnode refid="1377" relation="include">
        </childnode>
        <childnode refid="1380" relation="include">
        </childnode>
        <childnode refid="1384" relation="include">
        </childnode>
        <childnode refid="1382" relation="include">
        </childnode>
        <childnode refid="1385" relation="include">
        </childnode>
      </node>
      <node id="1393">
        <label>cyber/service_discovery/specific_manager/node_manager.h</label>
        <link refid="node__manager_8h_source"/>
        <childnode refid="1342" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1355" relation="include">
        </childnode>
        <childnode refid="1384" relation="include">
        </childnode>
        <childnode refid="1382" relation="include">
        </childnode>
        <childnode refid="1385" relation="include">
        </childnode>
      </node>
      <node id="1407">
        <label>cyber/scheduler/scheduler.h</label>
      </node>
      <node id="1367">
        <label>cyber/service_discovery/topology_manager.h</label>
        <link refid="topology__manager_8h_source"/>
        <childnode refid="1360" relation="include">
        </childnode>
        <childnode refid="1368" relation="include">
        </childnode>
        <childnode refid="1369" relation="include">
        </childnode>
        <childnode refid="1342" relation="include">
        </childnode>
        <childnode refid="1353" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1370" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
        <childnode refid="1371" relation="include">
        </childnode>
        <childnode refid="1375" relation="include">
        </childnode>
        <childnode refid="1393" relation="include">
        </childnode>
        <childnode refid="1394" relation="include">
        </childnode>
        <childnode refid="1395" relation="include">
        </childnode>
      </node>
      <node id="1405">
        <label>cyber/node/writer_base.h</label>
        <link refid="writer__base_8h_source"/>
        <childnode refid="1360" relation="include">
        </childnode>
        <childnode refid="1353" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1355" relation="include">
        </childnode>
        <childnode refid="1383" relation="include">
        </childnode>
      </node>
      <node id="1377">
        <label>cyber/service_discovery/container/graph.h</label>
        <link refid="graph_8h_source"/>
        <childnode refid="1378" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1354" relation="include">
        </childnode>
        <childnode refid="1379" relation="include">
        </childnode>
      </node>
      <node id="1384">
        <label>cyber/service_discovery/container/single_value_warehouse.h</label>
        <link refid="single__value__warehouse_8h_source"/>
        <childnode refid="1378" relation="include">
        </childnode>
        <childnode refid="1354" relation="include">
        </childnode>
        <childnode refid="1355" relation="include">
        </childnode>
        <childnode refid="1379" relation="include">
        </childnode>
        <childnode refid="1381" relation="include">
        </childnode>
      </node>
      <node id="1374">
        <label>fastrtps/participant/ParticipantListener.h</label>
      </node>
      <node id="1345">
        <label>cyber/common/types.h</label>
      </node>
      <node id="1385">
        <label>cyber/service_discovery/specific_manager/manager.h</label>
        <link refid="manager_8h_source"/>
        <childnode refid="1360" relation="include">
        </childnode>
        <childnode refid="1368" relation="include">
        </childnode>
        <childnode refid="1353" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1372" relation="include">
        </childnode>
        <childnode refid="1386" relation="include">
        </childnode>
        <childnode refid="1387" relation="include">
        </childnode>
        <childnode refid="1373" relation="include">
        </childnode>
        <childnode refid="1388" relation="include">
        </childnode>
        <childnode refid="1389" relation="include">
        </childnode>
        <childnode refid="1370" relation="include">
        </childnode>
        <childnode refid="1365" relation="include">
        </childnode>
        <childnode refid="1390" relation="include">
        </childnode>
      </node>
      <node id="1408">
        <label>cyber/service/service_base.h</label>
        <link refid="service__base_8h_source"/>
        <childnode refid="1343" relation="include">
        </childnode>
      </node>
      <node id="1363">
        <label>cyber/event/perf_event_cache.h</label>
      </node>
      <node id="1355">
        <label>vector</label>
      </node>
      <node id="1344">
        <label>utility</label>
      </node>
      <node id="1366">
        <label>cyber/scheduler/scheduler_factory.h</label>
      </node>
      <node id="1347">
        <label>cyber/blocker/intra_reader.h</label>
      </node>
      <node id="1371">
        <label>cyber/service_discovery/communication/participant_listener.h</label>
        <link refid="participant__listener_8h_source"/>
        <childnode refid="1368" relation="include">
        </childnode>
        <childnode refid="1353" relation="include">
        </childnode>
        <childnode refid="1372" relation="include">
        </childnode>
        <childnode refid="1373" relation="include">
        </childnode>
        <childnode refid="1374" relation="include">
        </childnode>
      </node>
      <node id="1372">
        <label>fastrtps/Domain.h</label>
      </node>
      <node id="1389">
        <label>fastrtps/subscriber/Subscriber.h</label>
      </node>
      <node id="1392">
        <label>fastrtps/subscriber/SubscriberListener.h</label>
      </node>
      <node id="1401">
        <label>iostream</label>
      </node>
      <node id="1361">
        <label>cyber/common/macros.h</label>
      </node>
      <node id="1354">
        <label>unordered_map</label>
      </node>
      <node id="1399">
        <label>climits</label>
      </node>
      <node id="1340">
        <label>/home/dexin/code/Edith/cyber/service/service.h</label>
        <link refid="service.h"/>
        <childnode refid="1341" relation="include">
        </childnode>
        <childnode refid="1342" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1344" relation="include">
        </childnode>
        <childnode refid="1345" relation="include">
        </childnode>
        <childnode refid="1346" relation="include">
        </childnode>
        <childnode refid="1407" relation="include">
        </childnode>
        <childnode refid="1408" relation="include">
        </childnode>
      </node>
      <node id="1353">
        <label>mutex</label>
      </node>
      <node id="1356">
        <label>cyber/blocker/blocker.h</label>
      </node>
      <node id="1364">
        <label>cyber/transport/transport.h</label>
      </node>
      <node id="1352">
        <label>algorithm</label>
      </node>
      <node id="1351">
        <label>cyber/node/reader.h</label>
        <link refid="reader_8h_source"/>
        <childnode refid="1352" relation="include">
        </childnode>
        <childnode refid="1341" relation="include">
        </childnode>
        <childnode refid="1342" relation="include">
        </childnode>
        <childnode refid="1353" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1354" relation="include">
        </childnode>
        <childnode refid="1344" relation="include">
        </childnode>
        <childnode refid="1355" relation="include">
        </childnode>
        <childnode refid="1356" relation="include">
        </childnode>
        <childnode refid="1349" relation="include">
        </childnode>
        <childnode refid="1357" relation="include">
        </childnode>
        <childnode refid="1358" relation="include">
        </childnode>
        <childnode refid="1359" relation="include">
        </childnode>
        <childnode refid="1365" relation="include">
        </childnode>
        <childnode refid="1366" relation="include">
        </childnode>
        <childnode refid="1367" relation="include">
        </childnode>
        <childnode refid="1396" relation="include">
        </childnode>
        <childnode refid="1364" relation="include">
        </childnode>
      </node>
      <node id="1350">
        <label>cyber/message/message_traits.h</label>
      </node>
      <node id="1394">
        <label>cyber/service_discovery/specific_manager/service_manager.h</label>
        <link refid="service__manager_8h_source"/>
        <childnode refid="1342" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1355" relation="include">
        </childnode>
        <childnode refid="1380" relation="include">
        </childnode>
        <childnode refid="1384" relation="include">
        </childnode>
        <childnode refid="1382" relation="include">
        </childnode>
        <childnode refid="1385" relation="include">
        </childnode>
      </node>
      <node id="1342">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1410">
        <label>/home/dexin/code/Edith/cyber/node/node_service_impl.h</label>
        <link refid="node__service__impl_8h_source"/>
        <childnode refid="1411" relation="include">
        </childnode>
      </node>
      <node id="1411">
        <label>/home/dexin/code/Edith/cyber/node/node.h</label>
        <link refid="node_8h_source"/>
        <childnode refid="1412" relation="include">
        </childnode>
        <childnode refid="1413" relation="include">
        </childnode>
      </node>
      <node id="1412">
        <label>/home/dexin/code/Edith/cyber/cyber.h</label>
        <link refid="cyber_8h_source"/>
      </node>
      <node id="1413">
        <label>/home/dexin/code/Edith/cyber/component/component_base.h</label>
        <link refid="component__base_8h_source"/>
        <childnode refid="1414" relation="include">
        </childnode>
        <childnode refid="1415" relation="include">
        </childnode>
      </node>
      <node id="1416">
        <label>/home/dexin/code/Edith/cyber/parameter/parameter_server.h</label>
        <link refid="parameter__server_8h_source"/>
      </node>
      <node id="1415">
        <label>/home/dexin/code/Edith/cyber/component/timer_component.h</label>
        <link refid="timer__component_8h_source"/>
      </node>
      <node id="1409">
        <label>/home/dexin/code/Edith/cyber/service/service.h</label>
        <link refid="service.h"/>
        <childnode refid="1410" relation="include">
        </childnode>
        <childnode refid="1416" relation="include">
        </childnode>
      </node>
      <node id="1414">
        <label>/home/dexin/code/Edith/cyber/component/component.h</label>
        <link refid="component_8h_source"/>
        <childnode refid="1412" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classapollo_1_1cyber_1_1_service" prot="public">apollo::cyber::Service</innerclass>
    <innernamespace refid="namespaceapollo">apollo</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber">apollo::cyber</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2018<sp/>The<sp/>Apollo<sp/>Authors.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYBER_SERVICE_SERVICE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CYBER_SERVICE_SERVICE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/common/types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/node/node_channel_impl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/scheduler/scheduler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cyber/service/service_base.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceapollo" kindref="compound">apollo</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecyber" kindref="compound">cyber</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Request,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Response&gt;</highlight></codeline>
<codeline lineno="42" refid="classapollo_1_1cyber_1_1_service" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_service_base" kindref="compound">ServiceBase</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ServiceCallback<sp/>=<sp/>std::function&lt;void(const<sp/>std::shared_ptr&lt;Request&gt;&amp;,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Response&gt;&amp;)&gt;;</highlight></codeline>
<codeline lineno="53" refid="classapollo_1_1cyber_1_1_service_1a564ad60a164abebb94329d9542e84aec" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1_service_1a564ad60a164abebb94329d9542e84aec" kindref="member">Service</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>node_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classapollo_1_1cyber_1_1_service_base_1af50ffeb173dc4e7b5410af9f74fdfe5b" kindref="member">service_name</ref>,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ServiceCallback&amp;<sp/>service_callback)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classapollo_1_1cyber_1_1_service_base" kindref="compound">ServiceBase</ref>(service_name),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_name_(node_name),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>service_callback_(service_callback),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request_channel_(service_name<sp/>+<sp/>SRV_CHANNEL_REQ_SUFFIX),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_channel_(service_name<sp/>+<sp/>SRV_CHANNEL_RES_SUFFIX)<sp/>{}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classapollo_1_1cyber_1_1_service_1a616f1abb7686a6ba5af0dfd1e5d920f9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1_service_1a616f1abb7686a6ba5af0dfd1e5d920f9" kindref="member">Service</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>node_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classapollo_1_1cyber_1_1_service_base_1af50ffeb173dc4e7b5410af9f74fdfe5b" kindref="member">service_name</ref>,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServiceCallback&amp;&amp;<sp/>service_callback)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classapollo_1_1cyber_1_1_service_base" kindref="compound">ServiceBase</ref>(service_name),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_name_(node_name),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>service_callback_(service_callback),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request_channel_(service_name<sp/>+<sp/>SRV_CHANNEL_REQ_SUFFIX),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_channel_(service_name<sp/>+<sp/>SRV_CHANNEL_RES_SUFFIX)<sp/>{}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1_service_1aea802e52a8799ad566e779b48c0bd75b" kindref="member">Service</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>~<ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service</ref>()<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classapollo_1_1cyber_1_1_service_1aeaaef735425d56ab7879e1597587c081" kindref="member">destroy</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_service_1a611e7a31ce9b5d3700af21b13871a3cf" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_service_1aeaaef735425d56ab7879e1597587c081" kindref="member">destroy</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HandleRequest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Request&gt;&amp;<sp/>request,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>transport::MessageInfo&amp;<sp/>message_info);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SendResponse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>transport::MessageInfo&amp;<sp/>message_info,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Response&gt;&amp;<sp/>response);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>request_receiver_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>std::string<sp/>node_name_;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>ServiceCallback<sp/>service_callback_;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>std::function&lt;void(const<sp/>std::shared_ptr&lt;Request&gt;&amp;,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>transport::MessageInfo&amp;)&gt;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>request_callback_;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;transport::Transmitter&lt;Response&gt;&gt;<sp/>response_transmitter_;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;transport::Receiver&lt;Request&gt;&gt;<sp/>request_receiver_;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>std::string<sp/>request_channel_;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>std::string<sp/>response_channel_;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>std::mutex<sp/>service_handle_request_mutex_;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inited_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Enqueue(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">()&gt;&amp;&amp;<sp/>task);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Process();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>std::thread<sp/>thread_;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>std::mutex<sp/>queue_mutex_;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>std::condition_variable<sp/>condition_;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>std::list&lt;std::function&lt;void()&gt;&gt;<sp/>tasks_;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Request,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Response&gt;</highlight></codeline>
<codeline lineno="126" refid="classapollo_1_1cyber_1_1_service_1aeaaef735425d56ab7879e1597587c081" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_service_1aeaaef735425d56ab7879e1597587c081" kindref="member">Service&lt;Request, Response&gt;::destroy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>inited_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lg(queue_mutex_);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;tasks_.clear();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>condition_.notify_all();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(thread_.joinable())<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>thread_.join();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Request,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Response&gt;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service&lt;Request, Response&gt;::Enqueue</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">()&gt;&amp;&amp;<sp/>task)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lg(queue_mutex_);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>tasks_.emplace_back(std::move(task));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>condition_.notify_one();</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Request,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Response&gt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service&lt;Request, Response&gt;::Process</ref>()<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!cyber::IsShutdown())<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>ul(queue_mutex_);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>condition_.wait(ul,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!inited_<sp/>||<sp/>!this-&gt;tasks_.empty();<sp/>});</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inited_)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tasks_.empty())<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>task<sp/>=<sp/>tasks_.front();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tasks_.pop_front();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ul.unlock();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>task();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Request,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Response&gt;</highlight></codeline>
<codeline lineno="163" refid="classapollo_1_1cyber_1_1_service_1a611e7a31ce9b5d3700af21b13871a3cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_service_1a611e7a31ce9b5d3700af21b13871a3cf" kindref="member">Service&lt;Request, Response&gt;::Init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsInit())<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>proto::RoleAttributes<sp/>role;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>role.set_node_name(node_name_);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>role.set_channel_name(response_channel_);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>channel_id<sp/>=<sp/>common::GlobalData::RegisterChannel(response_channel_);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>role.set_channel_id(channel_id);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>role.mutable_qos_profile()-&gt;CopyFrom(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>transport::QosProfileConf::QOS_PROFILE_SERVICES_DEFAULT);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>transport<sp/>=<sp/>transport::Transport::Instance();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>response_transmitter_<sp/>=</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>transport-&gt;CreateTransmitter&lt;Response&gt;(role,<sp/>proto::OptionalMode::RTPS);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(response_transmitter_<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>AERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Create<sp/>response<sp/>pub<sp/>failed.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>request_callback_<sp/>=</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::bind(&amp;<ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service&lt;Request, Response&gt;::HandleRequest</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::placeholders::_1,<sp/>std::placeholders::_2);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>role.set_channel_name(request_channel_);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>channel_id<sp/>=<sp/>common::GlobalData::RegisterChannel(request_channel_);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>role.set_channel_id(channel_id);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>request_receiver_<sp/>=<sp/>transport-&gt;CreateReceiver&lt;Request&gt;(</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>role,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[=](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Request&gt;&amp;<sp/>request,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>transport::MessageInfo&amp;<sp/>message_info,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>proto::RoleAttributes&amp;<sp/>reader_attr)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)reader_attr;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>task<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>request,<sp/>message_info]()<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;HandleRequest(request,<sp/>message_info);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Enqueue(std::move(task));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>proto::OptionalMode::RTPS);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>inited_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>thread_<sp/>=<sp/>std::thread(&amp;<ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service&lt;Request, Response&gt;::Process</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request_receiver_<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>AERROR<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Create<sp/>request<sp/>sub<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>request_channel_;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>response_transmitter_.reset();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Request,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Response&gt;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service&lt;Request, Response&gt;::HandleRequest</ref>(</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Request&gt;&amp;<sp/>request,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>transport::MessageInfo&amp;<sp/>message_info)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsInit())<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/>&quot;not<sp/>inited<sp/>error.&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>ADEBUG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;handling<sp/>request:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>request_channel_;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lk(service_handle_request_mutex_);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>response<sp/>=<sp/>std::make_shared&lt;Response&gt;();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>service_callback_(request,<sp/>response);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>transport::MessageInfo<sp/>msg_info(message_info);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>msg_info.set_sender_id(response_transmitter_-&gt;id());</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>SendResponse(msg_info,<sp/>response);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Request,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Response&gt;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service&lt;Request, Response&gt;::SendResponse</ref>(</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>transport::MessageInfo&amp;<sp/>message_info,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Response&gt;&amp;<sp/>response)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsInit())<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/>&quot;not<sp/>inited<sp/>error.&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>publish<sp/>return<sp/>value<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>LOG_DEBUG<sp/>&lt;&lt;<sp/>&quot;send<sp/>response<sp/>id:&quot;<sp/>&lt;&lt;<sp/>message_id.sequence_number;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>response_transmitter_-&gt;Transmit(response,<sp/>message_info);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cyber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>apollo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>CYBER_SERVICE_SERVICE_H_</highlight></codeline>
    </programlisting>
    <location file="/home/dexin/code/Edith/cyber/service/service.h"/>
  </compounddef>
</doxygen>
