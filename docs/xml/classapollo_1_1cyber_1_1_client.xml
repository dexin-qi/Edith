<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classapollo_1_1cyber_1_1_client" kind="class" language="C++" prot="public">
    <compoundname>apollo::cyber::Client</compoundname>
    <basecompoundref refid="classapollo_1_1cyber_1_1_client_base" prot="public" virt="non-virtual">apollo::cyber::ClientBase</basecompoundref>
    <includes refid="client_8h" local="no">client.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Request</declname>
        <defname>Request</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>Response</declname>
        <defname>Response</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classapollo_1_1cyber_1_1_client_1ac30a67b1a2c1b6d37963968172c290a5" prot="public" static="no">
        <type>typename std::shared_ptr&lt; Request &gt;</type>
        <definition>using apollo::cyber::Client&lt; Request, Response &gt;::SharedRequest =  typename std::shared_ptr&lt;Request&gt;</definition>
        <argsstring></argsstring>
        <name>SharedRequest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="50" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classapollo_1_1cyber_1_1_client_1af6198651a41ac3ed1b8c4c4bdb31bc71" prot="public" static="no">
        <type>typename std::shared_ptr&lt; Response &gt;</type>
        <definition>using apollo::cyber::Client&lt; Request, Response &gt;::SharedResponse =  typename std::shared_ptr&lt;Response&gt;</definition>
        <argsstring></argsstring>
        <name>SharedResponse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="51" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classapollo_1_1cyber_1_1_client_1a0e85359f3942a4fe56bbecba331ed29e" prot="public" static="no">
        <type>std::promise&lt; SharedResponse &gt;</type>
        <definition>using apollo::cyber::Client&lt; Request, Response &gt;::Promise =  std::promise&lt;SharedResponse&gt;</definition>
        <argsstring></argsstring>
        <name>Promise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="52" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classapollo_1_1cyber_1_1_client_1aefa3f85f666c6495bdf92c1bacb36802" prot="public" static="no">
        <type>std::shared_ptr&lt; Promise &gt;</type>
        <definition>using apollo::cyber::Client&lt; Request, Response &gt;::SharedPromise =  std::shared_ptr&lt;Promise&gt;</definition>
        <argsstring></argsstring>
        <name>SharedPromise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="53" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classapollo_1_1cyber_1_1_client_1ae8316f7e75af5319222df2dce376eebc" prot="public" static="no">
        <type>std::shared_future&lt; SharedResponse &gt;</type>
        <definition>using apollo::cyber::Client&lt; Request, Response &gt;::SharedFuture =  std::shared_future&lt;SharedResponse&gt;</definition>
        <argsstring></argsstring>
        <name>SharedFuture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="54" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classapollo_1_1cyber_1_1_client_1a995b86997b158bccf18e65dd077cf406" prot="public" static="no">
        <type>std::function&lt; void(SharedFuture)&gt;</type>
        <definition>using apollo::cyber::Client&lt; Request, Response &gt;::CallbackType =  std::function&lt;void(SharedFuture)&gt;</definition>
        <argsstring></argsstring>
        <name>CallbackType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="55" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1_client_1a742636a4c7f051463094919eaa9e6165" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string apollo::cyber::Client&lt; Request, Response &gt;::node_name_</definition>
        <argsstring></argsstring>
        <name>node_name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="158" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1_client_1a19e85f76c829899b989a7fcafe5aae97" prot="private" static="no" mutable="no">
        <type>std::function&lt; void(const std::shared_ptr&lt; Response &gt; &amp;, const transport::MessageInfo &amp;)&gt;</type>
        <definition>std::function&lt;void(const std::shared_ptr&lt;Response&gt;&amp;, const transport::MessageInfo&amp;)&gt; apollo::cyber::Client&lt; Request, Response &gt;::response_callback_</definition>
        <argsstring></argsstring>
        <name>response_callback_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="162" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1_client_1acf3fd35613077fc52bf4706c5ee4b69f" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; uint64_t, std::tuple&lt; SharedPromise, CallbackType, SharedFuture &gt; &gt;</type>
        <definition>std::unordered_map&lt;uint64_t, std::tuple&lt;SharedPromise, CallbackType, SharedFuture&gt; &gt; apollo::cyber::Client&lt; Request, Response &gt;::pending_requests_</definition>
        <argsstring></argsstring>
        <name>pending_requests_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="166" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1_client_1a63eaaeb862aaa0ad2d7b2314bfb4fd6e" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex apollo::cyber::Client&lt; Request, Response &gt;::pending_requests_mutex_</definition>
        <argsstring></argsstring>
        <name>pending_requests_mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="167" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1_client_1a1586ab328b13d0f26190e13d78c5eb63" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; transport::Transmitter&lt; Request &gt; &gt;</type>
        <definition>std::shared_ptr&lt;transport::Transmitter&lt;Request&gt; &gt; apollo::cyber::Client&lt; Request, Response &gt;::request_transmitter_</definition>
        <argsstring></argsstring>
        <name>request_transmitter_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="169" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1_client_1ad9afa7f2bd2f2fec4c3af05104b5d21a" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; transport::Receiver&lt; Response &gt; &gt;</type>
        <definition>std::shared_ptr&lt;transport::Receiver&lt;Response&gt; &gt; apollo::cyber::Client&lt; Request, Response &gt;::response_receiver_</definition>
        <argsstring></argsstring>
        <name>response_receiver_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="170" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1_client_1a164eeec085d6018b94887d920afc4d8d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string apollo::cyber::Client&lt; Request, Response &gt;::request_channel_</definition>
        <argsstring></argsstring>
        <name>request_channel_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="171" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1_client_1a8c0017f09d7384b81c4c82a1707f6d2f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string apollo::cyber::Client&lt; Request, Response &gt;::response_channel_</definition>
        <argsstring></argsstring>
        <name>response_channel_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="172" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1_client_1a9b8f371424fa143d2dff7397fdfdc177" prot="private" static="no" mutable="no">
        <type>transport::Identity</type>
        <definition>transport::Identity apollo::cyber::Client&lt; Request, Response &gt;::writer_id_</definition>
        <argsstring></argsstring>
        <name>writer_id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="174" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1_client_1a701360a2ff5dc2d4615f539e344c65f6" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t apollo::cyber::Client&lt; Request, Response &gt;::sequence_number_</definition>
        <argsstring></argsstring>
        <name>sequence_number_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="175" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_client_1a1ca1a0a5afa944750dded3726623534e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>apollo::cyber::Client&lt; Request, Response &gt;::Client</definition>
        <argsstring>(const std::string &amp;node_name, const std::string &amp;service_name)</argsstring>
        <name>Client</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>node_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>service_name</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classapollo_1_1cyber_1_1_client" kindref="compound">Client</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_name</parametername>
</parameternamelist>
<parameterdescription>
<para>used to fill RoleAttribute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>service_name</parametername>
</parameternamelist>
<parameterdescription>
<para>service name the <ref refid="classapollo_1_1cyber_1_1_client" kindref="compound">Client</ref> can request </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="63" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="63" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_client_1a729e32c0d4f2dc7643f9cc5903a3166a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>apollo::cyber::Client&lt; Request, Response &gt;::Client</definition>
        <argsstring>()=delete</argsstring>
        <name>Client</name>
        <briefdescription>
<para>forbid Constructing a new <ref refid="classapollo_1_1cyber_1_1_client" kindref="compound">Client</ref> object with empty params </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_client_1a6b08fc310fcf911beb0910da47e740d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual apollo::cyber::Client&lt; Request, Response &gt;::~Client</definition>
        <argsstring>()</argsstring>
        <name>~Client</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="75" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_client_1af20d217d504b1e20a0d01015b4c97d74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool apollo::cyber::Client&lt; Request, Response &gt;::Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <briefdescription>
<para>Init the <ref refid="classapollo_1_1cyber_1_1_client" kindref="compound">Client</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if init successfully </para></simplesect>
<simplesect kind="return"><para>false if init failed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="83" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="182" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_client_1afa9ed1738bb63776acd9478d5e922afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SharedResponse</type>
        <definition>Client&lt; Request, Response &gt;::SharedResponse apollo::cyber::Client&lt; Request, Response &gt;::SendRequest</definition>
        <argsstring>(SharedRequest request, const std::chrono::seconds &amp;timeout_s=std::chrono::seconds(5))</argsstring>
        <name>SendRequest</name>
        <param>
          <type>SharedRequest</type>
          <declname>request</declname>
        </param>
        <param>
          <type>const std::chrono::seconds &amp;</type>
          <declname>timeout_s</declname>
          <defval>std::chrono::seconds(5)</defval>
        </param>
        <briefdescription>
<para>Request the <ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service</ref> with a shared ptr Request type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>shared ptr of Request type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout_s</parametername>
</parameternamelist>
<parameterdescription>
<para>request timeout, if timeout, response will be empty </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SharedResponse result of this request </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="92" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="226" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_client_1aa6ac6d852d5e216f6d794aa61df4564c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SharedResponse</type>
        <definition>Client&lt; Request, Response &gt;::SharedResponse apollo::cyber::Client&lt; Request, Response &gt;::SendRequest</definition>
        <argsstring>(const Request &amp;request, const std::chrono::seconds &amp;timeout_s=std::chrono::seconds(5))</argsstring>
        <name>SendRequest</name>
        <param>
          <type>const Request &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type>const std::chrono::seconds &amp;</type>
          <declname>timeout_s</declname>
          <defval>std::chrono::seconds(5)</defval>
        </param>
        <briefdescription>
<para>Request the <ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service</ref> with a Request object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>Request object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout_s</parametername>
</parameternamelist>
<parameterdescription>
<para>request timeout, if timeout, response will be empty </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SharedResponse result of this request </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="103" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="245" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_client_1ace5807ab43406cdbfdcab251c8b20457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SharedFuture</type>
        <definition>Client&lt; Request, Response &gt;::SharedFuture apollo::cyber::Client&lt; Request, Response &gt;::AsyncSendRequest</definition>
        <argsstring>(SharedRequest request)</argsstring>
        <name>AsyncSendRequest</name>
        <param>
          <type>SharedRequest</type>
          <declname>request</declname>
        </param>
        <briefdescription>
<para>Send Request shared ptr asynchronously. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="110" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="263" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_client_1a346137af09141a3bd0010bcf37098912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SharedFuture</type>
        <definition>Client&lt; Request, Response &gt;::SharedFuture apollo::cyber::Client&lt; Request, Response &gt;::AsyncSendRequest</definition>
        <argsstring>(const Request &amp;request)</argsstring>
        <name>AsyncSendRequest</name>
        <param>
          <type>const Request &amp;</type>
          <declname>request</declname>
        </param>
        <briefdescription>
<para>Send Request object asynchronously. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="115" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="256" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_client_1aea594efa1e32a529b9428bc06cc0d5d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SharedFuture</type>
        <definition>Client&lt; Request, Response &gt;::SharedFuture apollo::cyber::Client&lt; Request, Response &gt;::AsyncSendRequest</definition>
        <argsstring>(SharedRequest request, CallbackType &amp;&amp;cb)</argsstring>
        <name>AsyncSendRequest</name>
        <param>
          <type>SharedRequest</type>
          <declname>request</declname>
        </param>
        <param>
          <type>CallbackType &amp;&amp;</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Send Request shared ptr asynchronously and invoke <computeroutput>cb</computeroutput> after we get response. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>Request shared ptr </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>callback function after we get response </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SharedFuture a <computeroutput>std::future</computeroutput> shared ptr </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="125" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="269" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_client_1a08a71d99f64374f6f06236848fbfe57c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool apollo::cyber::Client&lt; Request, Response &gt;::ServiceIsReady</definition>
        <argsstring>() const </argsstring>
        <name>ServiceIsReady</name>
        <reimplements refid="classapollo_1_1cyber_1_1_client_base_1af21c54a3f02783626ce5ae5eea621bda">ServiceIsReady</reimplements>
        <briefdescription>
<para>Is the <ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service</ref> is ready? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="130" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="287" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_client_1a7315a6cd9c733e844f0bd8e01006f491" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void apollo::cyber::Client&lt; Request, Response &gt;::Destroy</definition>
        <argsstring>()</argsstring>
        <name>Destroy</name>
        <reimplements refid="classapollo_1_1cyber_1_1_client_base_1a144df36f1d8e9ec5923e3ad77a4ee634">Destroy</reimplements>
        <briefdescription>
<para>destroy this <ref refid="classapollo_1_1cyber_1_1_client" kindref="compound">Client</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="135" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="179" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_client_1a374c271636f7f3a292f16845a37d825c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RatioT</type>
            <defval>std::milli</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool apollo::cyber::Client&lt; Request, Response &gt;::WaitForService</definition>
        <argsstring>(std::chrono::duration&lt; int64_t, RatioT &gt; timeout=std::chrono::duration&lt; int64_t, RatioT &gt;(-1))</argsstring>
        <name>WaitForService</name>
        <param>
          <type>std::chrono::duration&lt; int64_t, RatioT &gt;</type>
          <declname>timeout</declname>
          <defval>std::chrono::duration&lt; int64_t, RatioT &gt;(-1)</defval>
        </param>
        <briefdescription>
<para>wait for the connection with the <ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service</ref> established </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RatioT</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout unit, default is std::milli </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>wait time in unit of <computeroutput>RatioT</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the connection established </para></simplesect>
<simplesect kind="return"><para>false if timeout </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="146" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="146" bodyend="150"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_client_1a16d7df4f790876ca772e8c2d8b275ec3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::Client&lt; Request, Response &gt;::HandleResponse</definition>
        <argsstring>(const std::shared_ptr&lt; Response &gt; &amp;response, const transport::MessageInfo &amp;request_info)</argsstring>
        <name>HandleResponse</name>
        <param>
          <type>const std::shared_ptr&lt; Response &gt; &amp;</type>
          <declname>response</declname>
        </param>
        <param>
          <type>const transport::MessageInfo &amp;</type>
          <declname>request_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="153" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="292" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_client_1aa7eccad0fe36e39ccefc3b74df4bed72" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool apollo::cyber::Client&lt; Request, Response &gt;::IsInit</definition>
        <argsstring>(void) const </argsstring>
        <name>IsInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service/client.h" line="156" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="156" bodyend="156"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classapollo_1_1cyber_1_1_client" kindref="compound">Client</ref> get <computeroutput>Response</computeroutput> from a responding <computeroutput><ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service</ref></computeroutput> by sending a Request. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Request</parametername>
</parameternamelist>
<parameterdescription>
<para>the <computeroutput><ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service</ref></computeroutput> request type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Response</parametername>
</parameternamelist>
<parameterdescription>
<para>the <computeroutput><ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service</ref></computeroutput> response type</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>One <ref refid="classapollo_1_1cyber_1_1_client" kindref="compound">Client</ref> can only request one <ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="438">
        <label>apollo::cyber::ClientBase</label>
        <link refid="classapollo_1_1cyber_1_1_client_base"/>
      </node>
      <node id="437">
        <label>apollo::cyber::Client&lt; Request, Response &gt;</label>
        <link refid="classapollo_1_1cyber_1_1_client"/>
        <childnode refid="438" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="441">
        <label>string</label>
      </node>
      <node id="440">
        <label>apollo::cyber::ClientBase</label>
        <link refid="classapollo_1_1cyber_1_1_client_base"/>
        <childnode refid="441" relation="usage">
          <edgelabel>service_name_</edgelabel>
        </childnode>
      </node>
      <node id="439">
        <label>apollo::cyber::Client&lt; Request, Response &gt;</label>
        <link refid="classapollo_1_1cyber_1_1_client"/>
        <childnode refid="440" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dexin/code/Edith/cyber/service/client.h" line="48" column="1" bodyfile="/home/dexin/code/Edith/cyber/service/client.h" bodystart="48" bodyend="176"/>
    <listofallmembers>
      <member refid="classapollo_1_1cyber_1_1_client_1ace5807ab43406cdbfdcab251c8b20457" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>AsyncSendRequest</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a346137af09141a3bd0010bcf37098912" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>AsyncSendRequest</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1aea594efa1e32a529b9428bc06cc0d5d3" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>AsyncSendRequest</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a995b86997b158bccf18e65dd077cf406" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>CallbackType</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a1ca1a0a5afa944750dded3726623534e" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>Client</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a729e32c0d4f2dc7643f9cc5903a3166a" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>Client</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_base_1a11ae882f14c81d424e6065e84e274032" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>ClientBase</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a7315a6cd9c733e844f0bd8e01006f491" prot="public" virt="virtual"><scope>apollo::cyber::Client</scope><name>Destroy</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a16d7df4f790876ca772e8c2d8b275ec3" prot="private" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>HandleResponse</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1af20d217d504b1e20a0d01015b4c97d74" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>Init</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1aa7eccad0fe36e39ccefc3b74df4bed72" prot="private" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>IsInit</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a742636a4c7f051463094919eaa9e6165" prot="private" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>node_name_</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1acf3fd35613077fc52bf4706c5ee4b69f" prot="private" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>pending_requests_</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a63eaaeb862aaa0ad2d7b2314bfb4fd6e" prot="private" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>pending_requests_mutex_</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a0e85359f3942a4fe56bbecba331ed29e" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>Promise</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a164eeec085d6018b94887d920afc4d8d" prot="private" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>request_channel_</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a1586ab328b13d0f26190e13d78c5eb63" prot="private" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>request_transmitter_</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a19e85f76c829899b989a7fcafe5aae97" prot="private" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>response_callback_</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a8c0017f09d7384b81c4c82a1707f6d2f" prot="private" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>response_channel_</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1ad9afa7f2bd2f2fec4c3af05104b5d21a" prot="private" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>response_receiver_</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1afa9ed1738bb63776acd9478d5e922afd" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>SendRequest</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1aa6ac6d852d5e216f6d794aa61df4564c" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>SendRequest</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a701360a2ff5dc2d4615f539e344c65f6" prot="private" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>sequence_number_</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_base_1a91831fd30272eb760345dbfe6db86b44" prot="protected" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>service_name_</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a08a71d99f64374f6f06236848fbfe57c" prot="public" virt="virtual"><scope>apollo::cyber::Client</scope><name>ServiceIsReady</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_base_1a9d29607d93d7d68ccc3b248ef6f9cf47" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>ServiceName</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1ae8316f7e75af5319222df2dce376eebc" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>SharedFuture</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1aefa3f85f666c6495bdf92c1bacb36802" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>SharedPromise</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1ac30a67b1a2c1b6d37963968172c290a5" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>SharedRequest</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1af6198651a41ac3ed1b8c4c4bdb31bc71" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>SharedResponse</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a374c271636f7f3a292f16845a37d825c" prot="public" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>WaitForService</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_base_1ad6c2d2b853720a17de21f3bc25b6aae9" prot="protected" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>WaitForServiceNanoseconds</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a9b8f371424fa143d2dff7397fdfdc177" prot="private" virt="non-virtual"><scope>apollo::cyber::Client</scope><name>writer_id_</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_1a6b08fc310fcf911beb0910da47e740d0" prot="public" virt="virtual"><scope>apollo::cyber::Client</scope><name>~Client</name></member>
      <member refid="classapollo_1_1cyber_1_1_client_base_1a415c5d2ee0ef5bf9fd55c9536417c718" prot="public" virt="virtual"><scope>apollo::cyber::Client</scope><name>~ClientBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
