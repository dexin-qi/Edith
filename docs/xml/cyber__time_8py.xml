<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cyber__time_8py" kind="file" language="Python">
    <compoundname>cyber_time.py</compoundname>
    <innerclass refid="classcyber__py_1_1cyber__time_1_1_duration" prot="public">cyber_py::cyber_time::Duration</innerclass>
    <innerclass refid="classcyber__py_1_1cyber__time_1_1_time" prot="public">cyber_py::cyber_time::Time</innerclass>
    <innerclass refid="classcyber__py_1_1cyber__time_1_1_rate" prot="public">cyber_py::cyber_time::Rate</innerclass>
    <innernamespace refid="namespacecyber__py_1_1cyber__time">cyber_py::cyber_time</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!/usr/bin/env<sp/>python2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>2019<sp/>The<sp/>Apollo<sp/>Authors.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>****************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-*-<sp/>coding:<sp/>utf-8<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;Module<sp/>for<sp/>init<sp/>environment.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>importlib</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">#<sp/>init<sp/>vars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">CYBER_PATH<sp/>=<sp/>os.environ[</highlight><highlight class="stringliteral">&apos;CYBER_PATH&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="28"><highlight class="normal">CYBER_DIR<sp/>=<sp/>os.path.split(CYBER_PATH)[0]</highlight></codeline>
<codeline lineno="29"><highlight class="normal">sys.path.append(CYBER_PATH<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/third_party/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">sys.path.append(CYBER_PATH<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/lib/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">sys.path.append(CYBER_PATH<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/lib/python/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">sys.path.append(CYBER_DIR<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/python/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">sys.path.append(CYBER_DIR<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/cyber/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">_CYBER<sp/>=<sp/>importlib.import_module(</highlight><highlight class="stringliteral">&apos;_cyber&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">_CYBER_TIME<sp/>=<sp/>importlib.import_module(</highlight><highlight class="stringliteral">&apos;_cyber_time&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classcyber__py_1_1cyber__time_1_1_duration" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcyber__py_1_1cyber__time_1_1_duration" kindref="compound">Duration</ref>(object):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Class<sp/>for<sp/>cyber<sp/>Duration<sp/>wrapper.</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>other):</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(other,<sp/>int):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref><sp/>=<sp/>other</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(other,<sp/>long):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref><sp/>=<sp/>other</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(other,<sp/>float):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref><sp/>=<sp/>other<sp/>*<sp/>1000000000</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(other,<sp/>Duration):</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref><sp/>=<sp/>other.nanoseconds_</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1abc7dca6e0a9cf8e6f336e2b5a7e9fac3" kindref="member">duration_</ref><sp/>=<sp/>_CYBER_TIME.new_PyDuration(long(self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref>))</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__del__(self):</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CYBER_TIME.delete_PyDuration(self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1abc7dca6e0a9cf8e6f336e2b5a7e9fac3" kindref="member">duration_</ref>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcyber__py_1_1cyber__time_1_1_duration_1a3ee57561d3f3b7f7354e96598b3b633c" kindref="member">sleep</ref>(self):</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep<sp/>for<sp/>the<sp/>amount<sp/>of<sp/>time<sp/>specified<sp/>by<sp/>the<sp/>duration.</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CYBER_TIME.PyDuration_sleep(self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1abc7dca6e0a9cf8e6f336e2b5a7e9fac3" kindref="member">duration_</ref>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__str__(self):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str(self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcyber__py_1_1cyber__time_1_1_duration_1a35b3212d3d983f77d9184f01f06f9076" kindref="member">to_sec</ref>(self):</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convert<sp/>to<sp/>second.</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>float(self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref>)<sp/>/<sp/>1000000000</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcyber__py_1_1cyber__time_1_1_duration_1ab29fa02ea60dbbe9da97595ae9496664" kindref="member">to_nsec</ref>(self):</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convert<sp/>to<sp/>nanosecond.</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">iszero(self):</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref><sp/>==<sp/>0</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__add__(self,<sp/>other):</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcyber__py_1_1cyber__time_1_1_duration" kindref="compound">Duration</ref>(self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref><sp/>+<sp/>other.nanoseconds_)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__radd__(self,<sp/>other):</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcyber__py_1_1cyber__time_1_1_duration" kindref="compound">Duration</ref>(self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref><sp/>+<sp/>other.nanoseconds_)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__sub__(self,<sp/>other):</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcyber__py_1_1cyber__time_1_1_duration" kindref="compound">Duration</ref>(self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref><sp/>-<sp/>other.nanoseconds_)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__lt__(self,<sp/>other):</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref><sp/>&lt;<sp/>other.nanoseconds_</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__gt__(self,<sp/>other):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref><sp/>&gt;<sp/>other.nanoseconds_</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__le__(self,<sp/>other):</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref><sp/>&lt;=<sp/>other.nanoseconds_</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__ge__(self,<sp/>other):</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref><sp/>&gt;=<sp/>other.nanoseconds_</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__eq__(self,<sp/>other):</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref><sp/>==<sp/>other.nanoseconds_</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__ne__(self,<sp/>other):</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_duration_1acc9cd4d365707e296573ec88b0150d11" kindref="member">nanoseconds_</ref><sp/>!=<sp/>other.nanoseconds_</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classcyber__py_1_1cyber__time_1_1_time" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcyber__py_1_1cyber__time_1_1_time" kindref="compound">Time</ref>(object):</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Class<sp/>for<sp/>cyber<sp/>time<sp/>wrapper.</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcyber__py_1_1cyber__time_1_1_time_1a0b99e9e8cae078a6c523220df424aee2" kindref="member">__init__</ref>(self,<sp/>other):</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nanoseconds<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(other,<sp/>int):</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nanoseconds<sp/>=<sp/>other</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(other,<sp/>long):</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nanoseconds<sp/>=<sp/>other</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(other,<sp/>float):</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nanoseconds<sp/>=<sp/>other<sp/>*<sp/>1000000000</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(other,<sp/>Time):</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nanoseconds<sp/>=<sp/>other.to_nsec()</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1a2d81299f5e8afeea1e3a8807ffc9fb1f" kindref="member">time</ref><sp/>=<sp/>_CYBER_TIME.new_PyTime(long(nanoseconds))</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__del__(self):</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CYBER_TIME.delete_PyTime(self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1a2d81299f5e8afeea1e3a8807ffc9fb1f" kindref="member">time</ref>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__str__(self):</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str(self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1ac2cf6cb8b5bf8da09de9394641a9ceb7" kindref="member">to_nsec</ref>())</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">iszero(self):</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1ac2cf6cb8b5bf8da09de9394641a9ceb7" kindref="member">to_nsec</ref>()<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcyber__py_1_1cyber__time_1_1_time_1a86608e3ba3035a3093f3d965238ff006" kindref="member">now</ref>():</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>current<sp/>time.</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print<sp/>_CYBER_TIME.PyTime_now()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print<sp/>type(_CYBER_TIME.PyTime_now())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_now<sp/>=<sp/><ref refid="classcyber__py_1_1cyber__time_1_1_time" kindref="compound">Time</ref>(_CYBER_TIME.PyTime_now())</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>time_now</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">mono_time():</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mono_time<sp/>=<sp/><ref refid="classcyber__py_1_1cyber__time_1_1_time" kindref="compound">Time</ref>(_CYBER_TIME.PyTime_mono_time())</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mono_time</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcyber__py_1_1cyber__time_1_1_time_1ac62c72f5e03ccd49fd4242d885488590" kindref="member">to_sec</ref>(self):</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convert<sp/>to<sp/>second.</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_CYBER_TIME.PyTime_to_sec(self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1a2d81299f5e8afeea1e3a8807ffc9fb1f" kindref="member">time</ref>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcyber__py_1_1cyber__time_1_1_time_1ac2cf6cb8b5bf8da09de9394641a9ceb7" kindref="member">to_nsec</ref>(self):</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convert<sp/>to<sp/>nanosecond.</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_CYBER_TIME.PyTime_to_nsec(self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1a2d81299f5e8afeea1e3a8807ffc9fb1f" kindref="member">time</ref>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcyber__py_1_1cyber__time_1_1_time_1aca809dae476d3e0b52fd89f405eac505" kindref="member">sleep_until</ref>(self,<sp/>cyber_time):</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep<sp/>until<sp/>time.</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(time,<sp/>Time):</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_CYBER_TIME.PyTime_sleep_until(self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1a2d81299f5e8afeea1e3a8807ffc9fb1f" kindref="member">time</ref>,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cyber_time.to_nsec())</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NotImplemented</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__sub__(self,<sp/>other):</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(other,<sp/>Time):</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcyber__py_1_1cyber__time_1_1_duration" kindref="compound">Duration</ref>(self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1ac2cf6cb8b5bf8da09de9394641a9ceb7" kindref="member">to_nsec</ref>()<sp/>-<sp/>other.to_nsec())</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isinstance(other,<sp/>Duration)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcyber__py_1_1cyber__time_1_1_time" kindref="compound">Time</ref>(self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1ac2cf6cb8b5bf8da09de9394641a9ceb7" kindref="member">to_nsec</ref>()<sp/>-<sp/>other.to_nsec())</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__add__(self,<sp/>other):</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcyber__py_1_1cyber__time_1_1_time" kindref="compound">Time</ref>(self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1ac2cf6cb8b5bf8da09de9394641a9ceb7" kindref="member">to_nsec</ref>()<sp/>+<sp/>other.to_nsec())</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__radd__(self,<sp/>other):</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcyber__py_1_1cyber__time_1_1_time" kindref="compound">Time</ref>(self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1ac2cf6cb8b5bf8da09de9394641a9ceb7" kindref="member">to_nsec</ref>()<sp/>+<sp/>other.to_nsec())</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__lt__(self,<sp/>other):</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1ac2cf6cb8b5bf8da09de9394641a9ceb7" kindref="member">to_nsec</ref>()<sp/>&lt;<sp/>other.to_nsec()</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__gt__(self,<sp/>other):</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1ac2cf6cb8b5bf8da09de9394641a9ceb7" kindref="member">to_nsec</ref>()<sp/>&gt;<sp/>other.to_nsec()</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__le__(self,<sp/>other):</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1ac2cf6cb8b5bf8da09de9394641a9ceb7" kindref="member">to_nsec</ref>()<sp/>&lt;=<sp/>other.to_nsec()</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__ge__(self,<sp/>other):</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1ac2cf6cb8b5bf8da09de9394641a9ceb7" kindref="member">to_nsec</ref>()<sp/>&gt;=<sp/>other.to_nsec()</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__eq__(self,<sp/>other):</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1ac2cf6cb8b5bf8da09de9394641a9ceb7" kindref="member">to_nsec</ref>()<sp/>==<sp/>other.to_nsec()</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__ne__(self,<sp/>other):</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_time_1ac2cf6cb8b5bf8da09de9394641a9ceb7" kindref="member">to_nsec</ref>()<sp/>!=<sp/>other.to_nsec()</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="classcyber__py_1_1cyber__time_1_1_rate" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcyber__py_1_1cyber__time_1_1_rate" kindref="compound">Rate</ref>(object):</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Class<sp/>for<sp/>cyber<sp/>Rate<sp/>wrapper.<sp/>Help<sp/>run<sp/>loops<sp/>at<sp/>a<sp/>desired<sp/>frequency.</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcyber__py_1_1cyber__time_1_1_rate_1a958f8c29cd080b4d9f2d9aaa70af84d4" kindref="member">__init__</ref>(self,<sp/>other):</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(other,<sp/>int)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>isinstance(other,<sp/>long):</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_rate_1a925c7d9c5403baab034607efe37a85b9" kindref="member">rate_</ref><sp/>=<sp/>_CYBER_TIME.new_PyRate(long(other))</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(other,<sp/>float):</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_rate_1a925c7d9c5403baab034607efe37a85b9" kindref="member">rate_</ref><sp/>=<sp/>_CYBER_TIME.new_PyRate(long(1.0<sp/>/<sp/>other))</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(other,<sp/>Duration):</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classcyber__py_1_1cyber__time_1_1_rate_1a925c7d9c5403baab034607efe37a85b9" kindref="member">rate_</ref><sp/>=<sp/>_CYBER_TIME.new_PyRate(other.to_nsec())</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__del__(self):</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CYBER_TIME.delete_PyRate(self.<ref refid="classcyber__py_1_1cyber__time_1_1_rate_1a925c7d9c5403baab034607efe37a85b9" kindref="member">rate_</ref>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__str__(self):</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;cycle_time<sp/>=<sp/>%s,<sp/>exp_cycle_time<sp/>=<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>(str(self.<ref refid="classcyber__py_1_1cyber__time_1_1_rate_1a7871b770f69af0e8b61039bc71d1c888" kindref="member">get_cycle_time</ref>()),<sp/>str(self.<ref refid="classcyber__py_1_1cyber__time_1_1_rate_1a1ee26fa86a0842a8d486fe105a1abefa" kindref="member">get_expected_cycle_time</ref>()))</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcyber__py_1_1cyber__time_1_1_rate_1a0c2ff37c27ac6ded01cd256b2eb11dac" kindref="member">sleep</ref>(self):</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleeps<sp/>for<sp/>any<sp/>leftover<sp/>time<sp/>in<sp/>a<sp/>cycle.</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CYBER_TIME.PyRate_sleep(self.<ref refid="classcyber__py_1_1cyber__time_1_1_rate_1a925c7d9c5403baab034607efe37a85b9" kindref="member">rate_</ref>)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcyber__py_1_1cyber__time_1_1_rate_1a583a4433345db3491af7475d4e277265" kindref="member">reset</ref>(self):</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="247"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sets<sp/>the<sp/>start<sp/>time<sp/>for<sp/>the<sp/>rate<sp/>to<sp/>now.</highlight></codeline>
<codeline lineno="248"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CYBER_TIME.PyRate_PyRate_reset(self.<ref refid="classcyber__py_1_1cyber__time_1_1_rate_1a925c7d9c5403baab034607efe37a85b9" kindref="member">rate_</ref>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcyber__py_1_1cyber__time_1_1_rate_1a7871b770f69af0e8b61039bc71d1c888" kindref="member">get_cycle_time</ref>(self):</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="253"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Get<sp/>the<sp/>actual<sp/>run<sp/>time<sp/>of<sp/>a<sp/>cycle<sp/>from<sp/>start<sp/>to<sp/>sleep.</highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcyber__py_1_1cyber__time_1_1_duration" kindref="compound">Duration</ref>(_CYBER_TIME.PyRate_get_cycle_time(self.<ref refid="classcyber__py_1_1cyber__time_1_1_rate_1a925c7d9c5403baab034607efe37a85b9" kindref="member">rate_</ref>))</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcyber__py_1_1cyber__time_1_1_rate_1a1ee26fa86a0842a8d486fe105a1abefa" kindref="member">get_expected_cycle_time</ref>(self):</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="259"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Get<sp/>the<sp/>expected<sp/>cycle<sp/>time.</highlight></codeline>
<codeline lineno="260"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcyber__py_1_1cyber__time_1_1_duration" kindref="compound">Duration</ref>(_CYBER_TIME.PyRate_get_expected_cycle_time(self.<ref refid="classcyber__py_1_1cyber__time_1_1_rate_1a925c7d9c5403baab034607efe37a85b9" kindref="member">rate_</ref>))</highlight></codeline>
    </programlisting>
    <location file="/home/dexin/code/Edith/cyber/python/cyber_py/cyber_time.py"/>
  </compounddef>
</doxygen>
