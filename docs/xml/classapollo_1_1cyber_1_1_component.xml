<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classapollo_1_1cyber_1_1_component" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>apollo::cyber::Component</compoundname>
    <basecompoundref refid="classapollo_1_1cyber_1_1_component_base" prot="public" virt="non-virtual">apollo::cyber::ComponentBase</basecompoundref>
    <includes refid="component_8h" local="no">component.h</includes>
    <templateparamlist>
      <param>
        <type>typename M0</type>
        <defval>NullType</defval>
      </param>
      <param>
        <type>typename M1</type>
        <defval>NullType</defval>
      </param>
      <param>
        <type>typename M2</type>
        <defval>NullType</defval>
      </param>
      <param>
        <type>typename M3</type>
        <defval>NullType</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_component_1a37ccb4740d819327ac929b703d8cf9ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>apollo::cyber::Component&lt; M0, M1, M2, M3 &gt;::Component</definition>
        <argsstring>()</argsstring>
        <name>Component</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/component/component.h" line="60" column="1" bodyfile="/home/dexin/code/Edith/cyber/component/component.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_component_1af65ebeab9e345f27089095fe64e3b4f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>apollo::cyber::Component&lt; M0, M1, M2, M3 &gt;::~Component</definition>
        <argsstring>() override</argsstring>
        <name>~Component</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/component/component.h" line="61" column="1" bodyfile="/home/dexin/code/Edith/cyber/component/component.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_component_1ae68b7c7dce67c4d5c6c024c910bb9d92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool apollo::cyber::Component&lt; M0, M1, M2, M3 &gt;::Initialize</definition>
        <argsstring>(const ComponentConfig &amp;config) override</argsstring>
        <name>Initialize</name>
        <reimplements refid="classapollo_1_1cyber_1_1_component_base_1a234ab17fb5f504179b9f49d344e72882">Initialize</reimplements>
        <param>
          <type>const ComponentConfig &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>init the component by protobuf object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>which is defined in &apos;cyber/proto/component_conf.proto&apos;</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>returns true if successful, otherwise returns false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/component/component.h" line="70" column="1" bodyfile="/home/dexin/code/Edith/cyber/component/component.h" bodystart="143" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_component_1a3083d711406cfad7c11d60a0fadad274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool apollo::cyber::Component&lt; M0, M1, M2, M3 &gt;::Process</definition>
        <argsstring>(const std::shared_ptr&lt; M0 &gt; &amp;msg0, const std::shared_ptr&lt; M1 &gt; &amp;msg1, const std::shared_ptr&lt; M2 &gt; &amp;msg2, const std::shared_ptr&lt; M3 &gt; &amp;msg3)</argsstring>
        <name>Process</name>
        <param>
          <type>const std::shared_ptr&lt; M0 &gt; &amp;</type>
          <declname>msg0</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; M1 &gt; &amp;</type>
          <declname>msg1</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; M2 &gt; &amp;</type>
          <declname>msg2</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; M3 &gt; &amp;</type>
          <declname>msg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/component/component.h" line="71" column="1" bodyfile="/home/dexin/code/Edith/cyber/component/component.h" bodystart="409" bodyend="417"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classapollo_1_1cyber_1_1_component_1a9c909a2d1b6b53eaf6e4c9d95fc7aaec" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool apollo::cyber::Component&lt; M0, M1, M2, M3 &gt;::Proc</definition>
        <argsstring>(const std::shared_ptr&lt; M0 &gt; &amp;msg0, const std::shared_ptr&lt; M1 &gt; &amp;msg1, const std::shared_ptr&lt; M2 &gt; &amp;msg2, const std::shared_ptr&lt; M3 &gt; &amp;msg3)=0</argsstring>
        <name>Proc</name>
        <param>
          <type>const std::shared_ptr&lt; M0 &gt; &amp;</type>
          <declname>msg0</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; M1 &gt; &amp;</type>
          <declname>msg1</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; M2 &gt; &amp;</type>
          <declname>msg2</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; M3 &gt; &amp;</type>
          <declname>msg3</declname>
        </param>
        <briefdescription>
<para>The process logical of yours. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg0</parametername>
</parameternamelist>
<parameterdescription>
<para>the first channel message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg1</parametername>
</parameternamelist>
<parameterdescription>
<para>the second channel message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg2</parametername>
</parameternamelist>
<parameterdescription>
<para>the third channel message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg3</parametername>
</parameternamelist>
<parameterdescription>
<para>the fourth channel message.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>returns true if successful, otherwise returns false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/component/component.h" line="85" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classapollo_1_1cyber_1_1_component" kindref="compound">Component</ref> can process up to four channels of messages. </para>    </briefdescription>
    <detaileddescription>
<para>The message type is specified when the component is created. The <ref refid="classapollo_1_1cyber_1_1_component" kindref="compound">Component</ref> is inherited from <ref refid="classapollo_1_1cyber_1_1_component_base" kindref="compound">ComponentBase</ref>. Your component can inherit from <ref refid="classapollo_1_1cyber_1_1_component" kindref="compound">Component</ref>, and implement Init() &amp; Proc(...), They are picked up by the CyberRT. There are 4 specialization implementations.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>M0</parametername>
</parameternamelist>
<parameterdescription>
<para>the first message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>M1</parametername>
</parameternamelist>
<parameterdescription>
<para>the second message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>M2</parametername>
</parameternamelist>
<parameterdescription>
<para>the third message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>M3</parametername>
</parameternamelist>
<parameterdescription>
<para>the fourth message. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>The Init &amp; Proc functions need to be overloaded, but don&apos;t want to be called. They are called by the CyberRT Frame. </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="451">
        <label>apollo::cyber::ComponentBase</label>
        <link refid="classapollo_1_1cyber_1_1_component_base"/>
        <childnode refid="452" relation="public-inheritance">
        </childnode>
      </node>
      <node id="450">
        <label>apollo::cyber::Component&lt; M0, M1, M2, M3 &gt;</label>
        <link refid="classapollo_1_1cyber_1_1_component"/>
        <childnode refid="451" relation="public-inheritance">
        </childnode>
      </node>
      <node id="452">
        <label>std::enable_shared_from_this&lt; ComponentBase &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="454">
        <label>apollo::cyber::ComponentBase</label>
        <link refid="classapollo_1_1cyber_1_1_component_base"/>
        <childnode refid="455" relation="public-inheritance">
        </childnode>
        <childnode refid="456" relation="usage">
          <edgelabel>config_file_path_</edgelabel>
        </childnode>
      </node>
      <node id="456">
        <label>string</label>
      </node>
      <node id="453">
        <label>apollo::cyber::Component&lt; M0, M1, M2, M3 &gt;</label>
        <link refid="classapollo_1_1cyber_1_1_component"/>
        <childnode refid="454" relation="public-inheritance">
        </childnode>
      </node>
      <node id="455">
        <label>std::enable_shared_from_this&lt; ComponentBase &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/dexin/code/Edith/cyber/node/node.h" line="32" column="1" bodyfile="/home/dexin/code/Edith/cyber/node/node.h" bodystart="32" bodyend="-1"/>
    <listofallmembers>
      <member refid="classapollo_1_1cyber_1_1_component_base_1a05394f4bc5c70604f45a9194b1948aa4" prot="protected" virt="virtual"><scope>apollo::cyber::Component</scope><name>Clear</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_1a37ccb4740d819327ac929b703d8cf9ae" prot="public" virt="non-virtual"><scope>apollo::cyber::Component</scope><name>Component</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_base_1afb307772b21999bdb29e2ec866acfc75" prot="protected" virt="non-virtual"><scope>apollo::cyber::Component</scope><name>config_file_path_</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_base_1a77aaf08fe82edd39034868519d5be4cc" prot="protected" virt="non-virtual"><scope>apollo::cyber::Component</scope><name>ConfigFilePath</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_base_1a6757b622cfa042adc580dc8a89a668f8" prot="public" virt="non-virtual"><scope>apollo::cyber::Component</scope><name>GetProtoConfig</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_base_1ae9901cb3bfa8ef33c42b465606dbe0e5" prot="protected" virt="pure-virtual"><scope>apollo::cyber::Component</scope><name>Init</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_1ae68b7c7dce67c4d5c6c024c910bb9d92" prot="public" virt="virtual"><scope>apollo::cyber::Component</scope><name>Initialize</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_base_1a37d357e2eceb17811db7a7acaae59047" prot="public" virt="virtual" ambiguityscope="apollo::cyber::ComponentBase::"><scope>apollo::cyber::Component</scope><name>Initialize</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_base_1a8e11428c0f4b5566ac3a602cef96516c" prot="protected" virt="non-virtual"><scope>apollo::cyber::Component</scope><name>is_shutdown_</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_base_1afc6983393f7b411e673b09edd90e1643" prot="protected" virt="non-virtual"><scope>apollo::cyber::Component</scope><name>LoadConfigFiles</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_base_1aa6e7e5f9294f87bb5ff8c859ed1def27" prot="protected" virt="non-virtual"><scope>apollo::cyber::Component</scope><name>LoadConfigFiles</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_base_1ae561da7f75d403c45eca1ff3d0cfe2c8" prot="protected" virt="non-virtual"><scope>apollo::cyber::Component</scope><name>node_</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_1a9c909a2d1b6b53eaf6e4c9d95fc7aaec" prot="private" virt="pure-virtual"><scope>apollo::cyber::Component</scope><name>Proc</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_1a3083d711406cfad7c11d60a0fadad274" prot="public" virt="non-virtual"><scope>apollo::cyber::Component</scope><name>Process</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_base_1afca61d12e5699b85020c0d4250e132f9" prot="public" virt="non-virtual"><scope>apollo::cyber::Component</scope><name>Reader</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_base_1a381445ac2102bd1a34dbf87fef480919" prot="protected" virt="non-virtual"><scope>apollo::cyber::Component</scope><name>readers_</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_base_1a6d584e0ab4d990fdad46f845d2e43167" prot="public" virt="virtual"><scope>apollo::cyber::Component</scope><name>Shutdown</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_1af65ebeab9e345f27089095fe64e3b4f6" prot="public" virt="non-virtual"><scope>apollo::cyber::Component</scope><name>~Component</name></member>
      <member refid="classapollo_1_1cyber_1_1_component_base_1a1a6c3712519c64c9f652c9f7bd62814a" prot="public" virt="virtual"><scope>apollo::cyber::Component</scope><name>~ComponentBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
