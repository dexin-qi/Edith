<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager" kind="class" language="C++" prot="public">
    <compoundname>apollo::cyber::service_discovery::ChannelManager</compoundname>
    <basecompoundref refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager" prot="public" virt="non-virtual">apollo::cyber::service_discovery::Manager</basecompoundref>
    <includes refid="channel__manager_8h" local="no">channel_manager.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a3690fc3677abdb994d1de9b996f66cf6" prot="public" static="no">
        <type>std::vector&lt; proto::RoleAttributes &gt;</type>
        <definition>using apollo::cyber::service_discovery::ChannelManager::RoleAttrVec =  std::vector&lt;proto::RoleAttributes&gt;</definition>
        <argsstring></argsstring>
        <name>RoleAttrVec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="46" column="1" bodyfile="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1ab34e0a39795d6002f20de1388e8e099b" prot="public" static="no">
        <type><ref refid="classapollo_1_1cyber_1_1service__discovery_1_1_multi_value_warehouse" kindref="compound">MultiValueWarehouse</ref></type>
        <definition>using apollo::cyber::service_discovery::ChannelManager::WriterWarehouse =  MultiValueWarehouse</definition>
        <argsstring></argsstring>
        <name>WriterWarehouse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="47" column="1" bodyfile="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1adf7b96601a2dec7f06fb190d1a7b537d" prot="public" static="no">
        <type><ref refid="classapollo_1_1cyber_1_1service__discovery_1_1_multi_value_warehouse" kindref="compound">MultiValueWarehouse</ref></type>
        <definition>using apollo::cyber::service_discovery::ChannelManager::ReaderWarehouse =  MultiValueWarehouse</definition>
        <argsstring></argsstring>
        <name>ReaderWarehouse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="48" column="1" bodyfile="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a5ce07d9955d5944b039583db211c2d25" prot="public" static="no">
        <type>std::unordered_set&lt; std::string &gt;</type>
        <definition>using apollo::cyber::service_discovery::ChannelManager::ExemptedMessageTypes =  std::unordered_set&lt;std::string&gt;</definition>
        <argsstring></argsstring>
        <name>ExemptedMessageTypes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="49" column="1" bodyfile="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1ae83aaddaeb682129a07c148e01291cdd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TopologyManager</definition>
        <argsstring></argsstring>
        <name>TopologyManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="43" column="1" bodyfile="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a673d2f5f6577c37ca44263f7a7295324" prot="private" static="no" mutable="no">
        <type>ExemptedMessageTypes</type>
        <definition>ExemptedMessageTypes apollo::cyber::service_discovery::ChannelManager::exempted_msg_types_</definition>
        <argsstring></argsstring>
        <name>exempted_msg_types_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="204" column="1" bodyfile="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1aee4753f128f1a79a983e065c8775294a" prot="private" static="no" mutable="no">
        <type><ref refid="classapollo_1_1cyber_1_1service__discovery_1_1_graph" kindref="compound">Graph</ref></type>
        <definition>Graph apollo::cyber::service_discovery::ChannelManager::node_graph_</definition>
        <argsstring></argsstring>
        <name>node_graph_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="206" column="1" bodyfile="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a964857ce80f55467c86f0abd0dbf3419" prot="private" static="no" mutable="no">
        <type><ref refid="classapollo_1_1cyber_1_1service__discovery_1_1_multi_value_warehouse" kindref="compound">WriterWarehouse</ref></type>
        <definition>WriterWarehouse apollo::cyber::service_discovery::ChannelManager::node_writers_</definition>
        <argsstring></argsstring>
        <name>node_writers_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="208" column="1" bodyfile="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1aa021bd1e52a883766c5691ed2695bfb4" prot="private" static="no" mutable="no">
        <type><ref refid="classapollo_1_1cyber_1_1service__discovery_1_1_multi_value_warehouse" kindref="compound">ReaderWarehouse</ref></type>
        <definition>ReaderWarehouse apollo::cyber::service_discovery::ChannelManager::node_readers_</definition>
        <argsstring></argsstring>
        <name>node_readers_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="209" column="1" bodyfile="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1ac88e60402cb5f9799803f993a9c85138" prot="private" static="no" mutable="no">
        <type><ref refid="classapollo_1_1cyber_1_1service__discovery_1_1_multi_value_warehouse" kindref="compound">WriterWarehouse</ref></type>
        <definition>WriterWarehouse apollo::cyber::service_discovery::ChannelManager::channel_writers_</definition>
        <argsstring></argsstring>
        <name>channel_writers_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="212" column="1" bodyfile="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a14272c348659973742aae0a343ba1705" prot="private" static="no" mutable="no">
        <type><ref refid="classapollo_1_1cyber_1_1service__discovery_1_1_multi_value_warehouse" kindref="compound">ReaderWarehouse</ref></type>
        <definition>ReaderWarehouse apollo::cyber::service_discovery::ChannelManager::channel_readers_</definition>
        <argsstring></argsstring>
        <name>channel_readers_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="213" column="1" bodyfile="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1af4e4908c4172f7ff1703fea322611137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>apollo::cyber::service_discovery::ChannelManager::ChannelManager</definition>
        <argsstring>()</argsstring>
        <name>ChannelManager</name>
        <briefdescription>
<para>Construct a new Channel <ref refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager" kindref="compound">Manager</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a32fb19451ed63f5bb92b4b2beb4eddcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual apollo::cyber::service_discovery::ChannelManager::~ChannelManager</definition>
        <argsstring>()</argsstring>
        <name>~ChannelManager</name>
        <briefdescription>
<para>Destroy the Channel <ref refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager" kindref="compound">Manager</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1aebc9f5fa682a8eba522a93ccebed3811" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::service_discovery::ChannelManager::GetChannelNames</definition>
        <argsstring>(std::vector&lt; std::string &gt; *channels)</argsstring>
        <name>GetChannelNames</name>
        <param>
          <type>std::vector&lt; std::string &gt; *</type>
          <declname>channels</declname>
        </param>
        <briefdescription>
<para>Get all channel names in the topology. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channels</parametername>
</parameternamelist>
<parameterdescription>
<para>result vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a2259a9d33b8391ffb2ec307f6c442bc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::service_discovery::ChannelManager::GetProtoDesc</definition>
        <argsstring>(const std::string &amp;channel_name, std::string *proto_desc)</argsstring>
        <name>GetProtoDesc</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>channel_name</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>proto_desc</declname>
        </param>
        <briefdescription>
<para>Get the Protocol Desc of <computeroutput>channel_name</computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel_name</parametername>
</parameternamelist>
<parameterdescription>
<para>channel name we want to inquire </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proto_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>result string, empty if inquire failed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a06a205015433a25d5f2acf20eee4c445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::service_discovery::ChannelManager::GetMsgType</definition>
        <argsstring>(const std::string &amp;channel_name, std::string *msg_type)</argsstring>
        <name>GetMsgType</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>channel_name</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>msg_type</declname>
        </param>
        <briefdescription>
<para>Get the Msg Type of <computeroutput>channel_name</computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel_name</parametername>
</parameternamelist>
<parameterdescription>
<para>channel name we want to inquire </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg_type</parametername>
</parameternamelist>
<parameterdescription>
<para>result string, empty if inquire failed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a2d481f65124c1cdb70b66b81055f667f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool apollo::cyber::service_discovery::ChannelManager::HasWriter</definition>
        <argsstring>(const std::string &amp;channel_name)</argsstring>
        <name>HasWriter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>channel_name</declname>
        </param>
        <briefdescription>
<para>Inquire if there is at least one <ref refid="classapollo_1_1cyber_1_1_writer" kindref="compound">Writer</ref> that publishes <computeroutput>channel_name</computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel_name</parametername>
</parameternamelist>
<parameterdescription>
<para>channel name we want to inquire </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if there is at least one <ref refid="classapollo_1_1cyber_1_1_writer" kindref="compound">Writer</ref> </para></simplesect>
<simplesect kind="return"><para>false if there are no Writers </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1ada1e428556994da13575932c6feee98b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::service_discovery::ChannelManager::GetWriters</definition>
        <argsstring>(RoleAttrVec *writers)</argsstring>
        <name>GetWriters</name>
        <param>
          <type>RoleAttrVec *</type>
          <declname>writers</declname>
        </param>
        <briefdescription>
<para>Get All Writers object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writers</parametername>
</parameternamelist>
<parameterdescription>
<para>result RoleAttr vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a928e0afa8478cb244f3dd5d872694f38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::service_discovery::ChannelManager::GetWritersOfNode</definition>
        <argsstring>(const std::string &amp;node_name, RoleAttrVec *writers)</argsstring>
        <name>GetWritersOfNode</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>node_name</declname>
        </param>
        <param>
          <type>RoleAttrVec *</type>
          <declname>writers</declname>
        </param>
        <briefdescription>
<para>Get the Writers Of <ref refid="classapollo_1_1cyber_1_1_node" kindref="compound">Node</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_name</parametername>
</parameternamelist>
<parameterdescription>
<para>node&apos;s name we want to inquire </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>writers</parametername>
</parameternamelist>
<parameterdescription>
<para>result RoleAttribute vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a35bfdd2076a4789c23e9add4c868b5e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::service_discovery::ChannelManager::GetWritersOfChannel</definition>
        <argsstring>(const std::string &amp;channel_name, RoleAttrVec *writers)</argsstring>
        <name>GetWritersOfChannel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>channel_name</declname>
        </param>
        <param>
          <type>RoleAttrVec *</type>
          <declname>writers</declname>
        </param>
        <briefdescription>
<para>Get the Writers Of Channel object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel_name</parametername>
</parameternamelist>
<parameterdescription>
<para>channel&apos;s name we want to inquire </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>writers</parametername>
</parameternamelist>
<parameterdescription>
<para>result RoleAttribute vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1aa7e63842773a5f7d2b92bd856dc553dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool apollo::cyber::service_discovery::ChannelManager::HasReader</definition>
        <argsstring>(const std::string &amp;channel_name)</argsstring>
        <name>HasReader</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>channel_name</declname>
        </param>
        <briefdescription>
<para>Inquire if there is at least one <ref refid="classapollo_1_1cyber_1_1_reader" kindref="compound">Reader</ref> that publishes <computeroutput>channel_name</computeroutput> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel_name</parametername>
</parameternamelist>
<parameterdescription>
<para>channel name we want to inquire </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if there is at least one <ref refid="classapollo_1_1cyber_1_1_reader" kindref="compound">Reader</ref> </para></simplesect>
<simplesect kind="return"><para>false if there are no <ref refid="classapollo_1_1cyber_1_1_reader" kindref="compound">Reader</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1ae33f40f1a1e771b70e114b661bdeccd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::service_discovery::ChannelManager::GetReaders</definition>
        <argsstring>(RoleAttrVec *readers)</argsstring>
        <name>GetReaders</name>
        <param>
          <type>RoleAttrVec *</type>
          <declname>readers</declname>
        </param>
        <briefdescription>
<para>Get All Readers object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>readers</parametername>
</parameternamelist>
<parameterdescription>
<para>result RoleAttr vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a24c51f2ba8f6cf15fb7c3f44baf496d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::service_discovery::ChannelManager::GetReadersOfNode</definition>
        <argsstring>(const std::string &amp;node_name, RoleAttrVec *readers)</argsstring>
        <name>GetReadersOfNode</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>node_name</declname>
        </param>
        <param>
          <type>RoleAttrVec *</type>
          <declname>readers</declname>
        </param>
        <briefdescription>
<para>Get the Readers Of <ref refid="classapollo_1_1cyber_1_1_node" kindref="compound">Node</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_name</parametername>
</parameternamelist>
<parameterdescription>
<para>node&apos;s name we want to inquire </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>readers</parametername>
</parameternamelist>
<parameterdescription>
<para>result RoleAttribute vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1ad20c8af51bdacf9f1a6ecf7ce7bb371d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::service_discovery::ChannelManager::GetReadersOfChannel</definition>
        <argsstring>(const std::string &amp;channel_name, RoleAttrVec *readers)</argsstring>
        <name>GetReadersOfChannel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>channel_name</declname>
        </param>
        <param>
          <type>RoleAttrVec *</type>
          <declname>readers</declname>
        </param>
        <briefdescription>
<para>Get the Readers Of Channel object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel_name</parametername>
</parameternamelist>
<parameterdescription>
<para>channel&apos;s name we want to inquire </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>readers</parametername>
</parameternamelist>
<parameterdescription>
<para>result RoleAttribute vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a4d77d8400933c94b6338c9fea4b91d8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::service_discovery::ChannelManager::GetUpstreamOfNode</definition>
        <argsstring>(const std::string &amp;node_name, RoleAttrVec *upstream_nodes)</argsstring>
        <name>GetUpstreamOfNode</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>node_name</declname>
        </param>
        <param>
          <type>RoleAttrVec *</type>
          <declname>upstream_nodes</declname>
        </param>
        <briefdescription>
<para>Get the Upstream Of <ref refid="classapollo_1_1cyber_1_1_node" kindref="compound">Node</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>If <ref refid="classapollo_1_1cyber_1_1_node" kindref="compound">Node</ref> A has writer that publishes channel-1, and <ref refid="classapollo_1_1cyber_1_1_node" kindref="compound">Node</ref> B has reader that subscribes channel-1 then A is B&apos;s Upstream node, and B is A&apos;s Downstream node</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_name</parametername>
</parameternamelist>
<parameterdescription>
<para>node&apos;s name we want to inquire </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upstream_nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>result RoleAttribute vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1aff6f6c68372acdf0768804bba4a45898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::service_discovery::ChannelManager::GetDownstreamOfNode</definition>
        <argsstring>(const std::string &amp;node_name, RoleAttrVec *downstream_nodes)</argsstring>
        <name>GetDownstreamOfNode</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>node_name</declname>
        </param>
        <param>
          <type>RoleAttrVec *</type>
          <declname>downstream_nodes</declname>
        </param>
        <briefdescription>
<para>Get the Downstream Of <ref refid="classapollo_1_1cyber_1_1_node" kindref="compound">Node</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>If <ref refid="classapollo_1_1cyber_1_1_node" kindref="compound">Node</ref> A has writer that publishes channel-1, and <ref refid="classapollo_1_1cyber_1_1_node" kindref="compound">Node</ref> B has reader that subscribes channel-1 then A is B&apos;s Upstream node, and B is A&apos;s Downstream node</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_name</parametername>
</parameternamelist>
<parameterdescription>
<para>node&apos;s name we want to inquire </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>downstream_nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>result RoleAttribute vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1aefde1d2e4d5134dbf726fe1ad362246a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FlowDirection</type>
        <definition>FlowDirection apollo::cyber::service_discovery::ChannelManager::GetFlowDirection</definition>
        <argsstring>(const std::string &amp;lhs_node_name, const std::string &amp;rhs_node_name)</argsstring>
        <name>GetFlowDirection</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>lhs_node_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>rhs_node_name</declname>
        </param>
        <briefdescription>
<para>Get the Flow Direction from <computeroutput>lhs_node_node</computeroutput> to <computeroutput>rhs_node_name</computeroutput> You can see FlowDirection&apos;s description for more information. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>FlowDirection result direction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1ad7a6a93c25b30eca132bd945f1771a59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool apollo::cyber::service_discovery::ChannelManager::IsMessageTypeMatching</definition>
        <argsstring>(const std::string &amp;lhs, const std::string &amp;rhs)</argsstring>
        <name>IsMessageTypeMatching</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Is <computeroutput>lhs</computeroutput> and <computeroutput>rhs</computeroutput> have same MessageType. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>the left message type to compare </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>the right message type to compare </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if type matches </para></simplesect>
<simplesect kind="return"><para>false if type does not matches </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="192" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a470b79e3a7780121ede3552956722cf7" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool apollo::cyber::service_discovery::ChannelManager::Check</definition>
        <argsstring>(const RoleAttributes &amp;attr) override</argsstring>
        <name>Check</name>
        <reimplements refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1acfa0224581a6722daf4861f34e4c11ef">Check</reimplements>
        <param>
          <type>const RoleAttributes &amp;</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1ae4ed92f11a64d7ef4bb30680dad64493" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void apollo::cyber::service_discovery::ChannelManager::Dispose</definition>
        <argsstring>(const ChangeMsg &amp;msg) override</argsstring>
        <name>Dispose</name>
        <reimplements refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a6e36e4095291597364ce4b37ee1c897b">Dispose</reimplements>
        <param>
          <type>const ChangeMsg &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a4e39fc638d77bbe6d397299fa30ff6d6" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void apollo::cyber::service_discovery::ChannelManager::OnTopoModuleLeave</definition>
        <argsstring>(const std::string &amp;host_name, int process_id) override</argsstring>
        <name>OnTopoModuleLeave</name>
        <reimplements refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a95a679e0fc7904e6f1a8b2fdd139cc03">OnTopoModuleLeave</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>host_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>process_id</declname>
        </param>
        <briefdescription>
<para>Called when a process&apos; topology manager instance leave. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>host_name</parametername>
</parameternamelist>
<parameterdescription>
<para>is the process&apos;s host&apos;s name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>process_id</parametername>
</parameternamelist>
<parameterdescription>
<para>is the process&apos; id </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1aea63c8f1e8d638ef930c3c7ddd3b62ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::service_discovery::ChannelManager::DisposeJoin</definition>
        <argsstring>(const ChangeMsg &amp;msg)</argsstring>
        <name>DisposeJoin</name>
        <param>
          <type>const ChangeMsg &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1aa39a85495ea9eb83d6946405576bd1cb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::service_discovery::ChannelManager::DisposeLeave</definition>
        <argsstring>(const ChangeMsg &amp;msg)</argsstring>
        <name>DisposeLeave</name>
        <param>
          <type>const ChangeMsg &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1af48675ed66194fca37daad411c19d589" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::service_discovery::ChannelManager::ScanMessageType</definition>
        <argsstring>(const ChangeMsg &amp;msg)</argsstring>
        <name>ScanMessageType</name>
        <param>
          <type>const ChangeMsg &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="202" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Topology <ref refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager" kindref="compound">Manager</ref> of <ref refid="classapollo_1_1cyber_1_1_service" kindref="compound">Service</ref> related. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="415">
        <label>apollo::cyber::service_discovery::ChannelManager</label>
        <link refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager"/>
        <childnode refid="416" relation="public-inheritance">
        </childnode>
      </node>
      <node id="416">
        <label>apollo::cyber::service_discovery::Manager</label>
        <link refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="420">
        <label>eprosima::fastrtps::SubscriberListener</label>
      </node>
      <node id="417">
        <label>apollo::cyber::service_discovery::ChannelManager</label>
        <link refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager"/>
        <childnode refid="418" relation="public-inheritance">
        </childnode>
      </node>
      <node id="422">
        <label>string</label>
      </node>
      <node id="421">
        <label>ChangeType</label>
      </node>
      <node id="419">
        <label>apollo::cyber::service_discovery::SubscriberListener</label>
        <link refid="classapollo_1_1cyber_1_1service__discovery_1_1_subscriber_listener"/>
        <childnode refid="420" relation="public-inheritance">
        </childnode>
      </node>
      <node id="418">
        <label>apollo::cyber::service_discovery::Manager</label>
        <link refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager"/>
        <childnode refid="419" relation="usage">
          <edgelabel>listener_</edgelabel>
        </childnode>
        <childnode refid="421" relation="usage">
          <edgelabel>change_type_</edgelabel>
        </childnode>
        <childnode refid="422" relation="usage">
          <edgelabel>host_name_</edgelabel>
          <edgelabel>channel_name_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" line="42" column="1" bodyfile="/home/dexin/code/Edith/cyber/service_discovery/specific_manager/channel_manager.h" bodystart="42" bodyend="214"/>
    <listofallmembers>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1abe0325759c5c14d16cfe2e2b1460b9ce" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>AddChangeListener</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a901cf709cf2707faf0ced991bc2da591" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>allowed_role_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a26dbcd395983f96ff00060648e16ff93" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>change_type_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1ab43fa282f6aa1b3b1180a1e416b98b68" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>ChangeConnection</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a1e08b690a5829fbabeb6d3aea5ab8320" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>ChangeFunc</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a9730b844d88e23f65d5dcbcfca1a7d59" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>ChangeSignal</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a2ff877c30b287c1a5c7efeedfde0afe0" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>channel_name_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a14272c348659973742aae0a343ba1705" prot="private" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>channel_readers_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1ac88e60402cb5f9799803f993a9c85138" prot="private" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>channel_writers_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1af4e4908c4172f7ff1703fea322611137" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>ChannelManager</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a470b79e3a7780121ede3552956722cf7" prot="private" virt="virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>Check</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a0aee2af4344c78f97ec72b885d98ab5d" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>Convert</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a722f92a9db32919ef83b9fbfcaaff85a" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>CreatePublisher</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a777040a412671e776f1f750933a629f3" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>CreateSubscriber</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1ae4ed92f11a64d7ef4bb30680dad64493" prot="private" virt="virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>Dispose</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1aea63c8f1e8d638ef930c3c7ddd3b62ab" prot="private" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>DisposeJoin</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1aa39a85495ea9eb83d6946405576bd1cb" prot="private" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>DisposeLeave</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a673d2f5f6577c37ca44263f7a7295324" prot="private" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>exempted_msg_types_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a5ce07d9955d5944b039583db211c2d25" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>ExemptedMessageTypes</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1aebc9f5fa682a8eba522a93ccebed3811" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>GetChannelNames</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1aff6f6c68372acdf0768804bba4a45898" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>GetDownstreamOfNode</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1aefde1d2e4d5134dbf726fe1ad362246a" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>GetFlowDirection</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a06a205015433a25d5f2acf20eee4c445" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>GetMsgType</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a2259a9d33b8391ffb2ec307f6c442bc8" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>GetProtoDesc</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1ae33f40f1a1e771b70e114b661bdeccd7" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>GetReaders</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1ad20c8af51bdacf9f1a6ecf7ce7bb371d" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>GetReadersOfChannel</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a24c51f2ba8f6cf15fb7c3f44baf496d1" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>GetReadersOfNode</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a4d77d8400933c94b6338c9fea4b91d8b" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>GetUpstreamOfNode</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1ada1e428556994da13575932c6feee98b" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>GetWriters</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a35bfdd2076a4789c23e9add4c868b5e7" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>GetWritersOfChannel</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a928e0afa8478cb244f3dd5d872694f38" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>GetWritersOfNode</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1aa7e63842773a5f7d2b92bd856dc553dd" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>HasReader</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a2d481f65124c1cdb70b66b81055f667f" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>HasWriter</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a6e221053092ac40fd6810510a3eb10cc" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>host_name_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a8a8bd0560f76ccb0be2a37fd62fbb2d8" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>is_discovery_started_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a260bde7ce1d7749c3cb35e98b820d278" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>is_shutdown_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a26c75e76647b6753e1565c4129c518f7" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>IsFromSameProcess</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1ad7a6a93c25b30eca132bd945f1771a59" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>IsMessageTypeMatching</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a21da44e9c4c3fe10af7005c4d5eec894" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>Join</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1abf37a1b3c4f23425fcdbd46ec0a3b632" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>Leave</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a8dd4cf136c87d16027530af545cb0842" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>listener_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1ab97c68b06403476a563dcc7389ed1168" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>lock_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a8bc33aa7aefffcaa50ebf3ca12b4dd48" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>Manager</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1ab3221bff519725654e6e232d6ad528e0" prot="protected" virt="virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>NeedPublish</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1aee4753f128f1a79a983e065c8775294a" prot="private" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>node_graph_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1aa021bd1e52a883766c5691ed2695bfb4" prot="private" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>node_readers_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a964857ce80f55467c86f0abd0dbf3419" prot="private" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>node_writers_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a086e96a029a1f05a0561d57e541c9526" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>Notify</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a8c4903e0876ace79003d4e2994be43ab" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>OnRemoteChange</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a4e39fc638d77bbe6d397299fa30ff6d6" prot="private" virt="virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>OnTopoModuleLeave</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1ac251ffb4700b4b901451ad9f103ccdd8" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>process_id_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a2a82d0febb575ddd693184b639016426" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>Publish</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1ab5caa9d2feb69e9746f6371a908d2661" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>publisher_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1adf7b96601a2dec7f06fb190d1a7b537d" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>ReaderWarehouse</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a2e46899f22d9e001b10a7e49ef61bd0c" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>RemoveChangeListener</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a3690fc3677abdb994d1de9b996f66cf6" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>RoleAttrVec</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a7576b9ac293ff99af06e30a971df5dce" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>RtpsParticipant</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a1b8464bc115c49a16a0d943c7cb5ef32" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>RtpsPublisherAttr</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1ac16fc5e01d6d107cbb865d6d8127f622" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>RtpsSubscriberAttr</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1af48675ed66194fca37daad411c19d589" prot="private" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>ScanMessageType</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a4a4e6fc42da96478d0ff6ca5d8f21ad7" prot="public" virt="virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>Shutdown</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1af92680680a5e900f48f8a39d9a0524f9" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>signal_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a0a007e927b14cb2584a9b97b1c8ec299" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>StartDiscovery</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1ae06ca49d144ab1ca78cfd30f204e4caa" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>StopDiscovery</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1a4324a7de5c025ab948d210916bbadcb2" prot="protected" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>subscriber_</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1ae83aaddaeb682129a07c148e01291cdd" prot="private" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>TopologyManager</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1ab34e0a39795d6002f20de1388e8e099b" prot="public" virt="non-virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>WriterWarehouse</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_channel_manager_1a32fb19451ed63f5bb92b4b2beb4eddcf" prot="public" virt="virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>~ChannelManager</name></member>
      <member refid="classapollo_1_1cyber_1_1service__discovery_1_1_manager_1ae683108196b8958825bb4142ab98a378" prot="public" virt="virtual"><scope>apollo::cyber::service_discovery::ChannelManager</scope><name>~Manager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
